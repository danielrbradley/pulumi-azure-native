// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170301preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A SQL Server availability group listener.
//
// ## Example Usage
// ### Creates or updates an availability group listener.
//
// ```go
// package main
//
// import (
// 	sqlvirtualmachine "github.com/pulumi/pulumi-azurerm/sdk/go/azurerm/sqlvirtualmachine/v20170301preview"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := sqlvirtualmachine.NewAvailabilityGroupListener(ctx, "availabilityGroupListener", &sqlvirtualmachine.AvailabilityGroupListenerArgs{
// 			AvailabilityGroupListenerName: pulumi.String("agl-test"),
// 			AvailabilityGroupName:         pulumi.String("ag-test"),
// 			LoadBalancerConfigurations: sqlvirtualmachine.LoadBalancerConfigurationArray{
// 				&sqlvirtualmachine.LoadBalancerConfigurationArgs{
// 					LoadBalancerResourceId: pulumi.String("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Network/loadBalancers/lb-test"),
// 					PrivateIpAddress: &sqlvirtualmachine.PrivateIPAddressArgs{
// 						IpAddress:        pulumi.String("10.1.0.112"),
// 						SubnetResourceId: pulumi.String("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/default"),
// 					},
// 					ProbePort: pulumi.Int(59983),
// 					SqlVirtualMachineInstances: pulumi.StringArray{
// 						pulumi.String("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm2"),
// 						pulumi.String("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/testvm3"),
// 					},
// 				},
// 			},
// 			Port:                       pulumi.Int(1433),
// 			ResourceGroupName:          pulumi.String("testrg"),
// 			SqlVirtualMachineGroupName: pulumi.String("testvmgroup"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
//
// ```
type AvailabilityGroupListener struct {
	pulumi.CustomResourceState

	// Name of the availability group.
	AvailabilityGroupName pulumi.StringPtrOutput `pulumi:"availabilityGroupName"`
	// Create a default availability group if it does not exist.
	CreateDefaultAvailabilityGroupIfNotExist pulumi.BoolPtrOutput `pulumi:"createDefaultAvailabilityGroupIfNotExist"`
	// List of load balancer configurations for an availability group listener.
	LoadBalancerConfigurations LoadBalancerConfigurationResponseArrayOutput `pulumi:"loadBalancerConfigurations"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Listener port.
	Port pulumi.IntPtrOutput `pulumi:"port"`
	// Provisioning state to track the async operation status.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAvailabilityGroupListener registers a new resource with the given unique name, arguments, and options.
func NewAvailabilityGroupListener(ctx *pulumi.Context,
	name string, args *AvailabilityGroupListenerArgs, opts ...pulumi.ResourceOption) (*AvailabilityGroupListener, error) {
	if args == nil || args.AvailabilityGroupListenerName == nil {
		return nil, errors.New("missing required argument 'AvailabilityGroupListenerName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.SqlVirtualMachineGroupName == nil {
		return nil, errors.New("missing required argument 'SqlVirtualMachineGroupName'")
	}
	if args == nil {
		args = &AvailabilityGroupListenerArgs{}
	}
	var resource AvailabilityGroupListener
	err := ctx.RegisterResource("azurerm:sqlvirtualmachine/v20170301preview:AvailabilityGroupListener", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAvailabilityGroupListener gets an existing AvailabilityGroupListener resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAvailabilityGroupListener(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AvailabilityGroupListenerState, opts ...pulumi.ResourceOption) (*AvailabilityGroupListener, error) {
	var resource AvailabilityGroupListener
	err := ctx.ReadResource("azurerm:sqlvirtualmachine/v20170301preview:AvailabilityGroupListener", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AvailabilityGroupListener resources.
type availabilityGroupListenerState struct {
	// Name of the availability group.
	AvailabilityGroupName *string `pulumi:"availabilityGroupName"`
	// Create a default availability group if it does not exist.
	CreateDefaultAvailabilityGroupIfNotExist *bool `pulumi:"createDefaultAvailabilityGroupIfNotExist"`
	// List of load balancer configurations for an availability group listener.
	LoadBalancerConfigurations []LoadBalancerConfigurationResponse `pulumi:"loadBalancerConfigurations"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Listener port.
	Port *int `pulumi:"port"`
	// Provisioning state to track the async operation status.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type AvailabilityGroupListenerState struct {
	// Name of the availability group.
	AvailabilityGroupName pulumi.StringPtrInput
	// Create a default availability group if it does not exist.
	CreateDefaultAvailabilityGroupIfNotExist pulumi.BoolPtrInput
	// List of load balancer configurations for an availability group listener.
	LoadBalancerConfigurations LoadBalancerConfigurationResponseArrayInput
	// Resource name.
	Name pulumi.StringPtrInput
	// Listener port.
	Port pulumi.IntPtrInput
	// Provisioning state to track the async operation status.
	ProvisioningState pulumi.StringPtrInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (AvailabilityGroupListenerState) ElementType() reflect.Type {
	return reflect.TypeOf((*availabilityGroupListenerState)(nil)).Elem()
}

type availabilityGroupListenerArgs struct {
	// Name of the availability group listener.
	AvailabilityGroupListenerName string `pulumi:"availabilityGroupListenerName"`
	// Name of the availability group.
	AvailabilityGroupName *string `pulumi:"availabilityGroupName"`
	// Create a default availability group if it does not exist.
	CreateDefaultAvailabilityGroupIfNotExist *bool `pulumi:"createDefaultAvailabilityGroupIfNotExist"`
	// List of load balancer configurations for an availability group listener.
	LoadBalancerConfigurations []LoadBalancerConfiguration `pulumi:"loadBalancerConfigurations"`
	// Listener port.
	Port *int `pulumi:"port"`
	// Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Name of the SQL virtual machine group.
	SqlVirtualMachineGroupName string `pulumi:"sqlVirtualMachineGroupName"`
}

// The set of arguments for constructing a AvailabilityGroupListener resource.
type AvailabilityGroupListenerArgs struct {
	// Name of the availability group listener.
	AvailabilityGroupListenerName pulumi.StringInput
	// Name of the availability group.
	AvailabilityGroupName pulumi.StringPtrInput
	// Create a default availability group if it does not exist.
	CreateDefaultAvailabilityGroupIfNotExist pulumi.BoolPtrInput
	// List of load balancer configurations for an availability group listener.
	LoadBalancerConfigurations LoadBalancerConfigurationArrayInput
	// Listener port.
	Port pulumi.IntPtrInput
	// Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput
	// Name of the SQL virtual machine group.
	SqlVirtualMachineGroupName pulumi.StringInput
}

func (AvailabilityGroupListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*availabilityGroupListenerArgs)(nil)).Elem()
}
