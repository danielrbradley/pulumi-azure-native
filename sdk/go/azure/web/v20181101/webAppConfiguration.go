// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20181101

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Web app configuration ARM resource.
type WebAppConfiguration struct {
	pulumi.CustomResourceState

	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn pulumi.BoolPtrOutput `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition ApiDefinitionInfoResponsePtrOutput `pulumi:"apiDefinition"`
	// App command line to launch.
	AppCommandLine pulumi.StringPtrOutput `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings NameValuePairResponseArrayOutput `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled pulumi.BoolPtrOutput `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules AutoHealRulesResponsePtrOutput `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName pulumi.StringPtrOutput `pulumi:"autoSwapSlotName"`
	// User-provided Azure storage accounts.
	AzureStorageAccounts AzureStorageInfoValueResponseMapOutput `pulumi:"azureStorageAccounts"`
	// Connection strings.
	ConnectionStrings ConnStringInfoResponseArrayOutput `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors CorsSettingsResponsePtrOutput `pulumi:"cors"`
	// Default documents.
	DefaultDocuments pulumi.StringArrayOutput `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled pulumi.BoolPtrOutput `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot pulumi.StringPtrOutput `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments ExperimentsResponsePtrOutput `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState pulumi.StringPtrOutput `pulumi:"ftpsState"`
	// Handler mappings.
	HandlerMappings HandlerMappingResponseArrayOutput `pulumi:"handlerMappings"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled pulumi.BoolPtrOutput `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled pulumi.BoolPtrOutput `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions IpSecurityRestrictionResponseArrayOutput `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer pulumi.StringPtrOutput `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion pulumi.StringPtrOutput `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion pulumi.StringPtrOutput `pulumi:"javaVersion"`
	// Kind of resource.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Site limits.
	Limits SiteLimitsResponsePtrOutput `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion pulumi.StringPtrOutput `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing pulumi.StringPtrOutput `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled pulumi.BoolPtrOutput `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit pulumi.IntPtrOutput `pulumi:"logsDirectorySizeLimit"`
	// Site MachineKey.
	MachineKey SiteMachineKeyResponseOutput `pulumi:"machineKey"`
	// Managed pipeline mode.
	ManagedPipelineMode pulumi.StringPtrOutput `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId pulumi.IntPtrOutput `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion pulumi.StringPtrOutput `pulumi:"minTlsVersion"`
	// Resource Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// .NET Framework version.
	NetFrameworkVersion pulumi.StringPtrOutput `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion pulumi.StringPtrOutput `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers pulumi.IntPtrOutput `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion pulumi.StringPtrOutput `pulumi:"phpVersion"`
	// Publishing user name.
	PublishingUsername pulumi.StringPtrOutput `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push PushSettingsResponsePtrOutput `pulumi:"push"`
	// Version of Python.
	PythonVersion pulumi.StringPtrOutput `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled pulumi.BoolPtrOutput `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion pulumi.StringPtrOutput `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled pulumi.BoolPtrOutput `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime pulumi.StringPtrOutput `pulumi:"requestTracingExpirationTime"`
	// Number of reserved instances.
	// This setting only applies to the Consumption Plan
	ReservedInstanceCount pulumi.IntPtrOutput `pulumi:"reservedInstanceCount"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions IpSecurityRestrictionResponseArrayOutput `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain pulumi.BoolPtrOutput `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// SCM type.
	ScmType pulumi.StringPtrOutput `pulumi:"scmType"`
	// Tracing options.
	TracingOptions pulumi.StringPtrOutput `pulumi:"tracingOptions"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess pulumi.BoolPtrOutput `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications VirtualApplicationResponseArrayOutput `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName pulumi.StringPtrOutput `pulumi:"vnetName"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled pulumi.BoolPtrOutput `pulumi:"webSocketsEnabled"`
	// Xenon App Framework and version
	WindowsFxVersion pulumi.StringPtrOutput `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId pulumi.IntPtrOutput `pulumi:"xManagedServiceIdentityId"`
}

// NewWebAppConfiguration registers a new resource with the given unique name, arguments, and options.
func NewWebAppConfiguration(ctx *pulumi.Context,
	name string, args *WebAppConfigurationArgs, opts ...pulumi.ResourceOption) (*WebAppConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Http20Enabled == nil {
		args.Http20Enabled = pulumi.BoolPtr(true)
	}
	if args.LocalMySqlEnabled == nil {
		args.LocalMySqlEnabled = pulumi.BoolPtr(false)
	}
	if args.NetFrameworkVersion == nil {
		args.NetFrameworkVersion = pulumi.StringPtr("v4.6")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:web/v20181101:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:web:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-nextgen:web:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:web/latest:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/latest:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:web/v20150801:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20150801:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:web/v20160801:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20160801:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:web/v20180201:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20180201:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:web/v20190801:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20190801:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:web/v20200601:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20200601:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:web/v20200901:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20200901:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-native:web/v20201001:WebAppConfiguration"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20201001:WebAppConfiguration"),
		},
	})
	opts = append(opts, aliases)
	var resource WebAppConfiguration
	err := ctx.RegisterResource("azure-native:web/v20181101:WebAppConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAppConfiguration gets an existing WebAppConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAppConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppConfigurationState, opts ...pulumi.ResourceOption) (*WebAppConfiguration, error) {
	var resource WebAppConfiguration
	err := ctx.ReadResource("azure-native:web/v20181101:WebAppConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAppConfiguration resources.
type webAppConfigurationState struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition *ApiDefinitionInfoResponse `pulumi:"apiDefinition"`
	// App command line to launch.
	AppCommandLine *string `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings []NameValuePairResponse `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled *bool `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules *AutoHealRulesResponse `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// User-provided Azure storage accounts.
	AzureStorageAccounts map[string]AzureStorageInfoValueResponse `pulumi:"azureStorageAccounts"`
	// Connection strings.
	ConnectionStrings []ConnStringInfoResponse `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors *CorsSettingsResponse `pulumi:"cors"`
	// Default documents.
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled *bool `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot *string `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments *ExperimentsResponse `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState *string `pulumi:"ftpsState"`
	// Handler mappings.
	HandlerMappings []HandlerMappingResponse `pulumi:"handlerMappings"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled *bool `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled *bool `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions []IpSecurityRestrictionResponse `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer *string `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion *string `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion *string `pulumi:"javaVersion"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Site limits.
	Limits *SiteLimitsResponse `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion *string `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing *string `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled *bool `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit *int `pulumi:"logsDirectorySizeLimit"`
	// Site MachineKey.
	MachineKey *SiteMachineKeyResponse `pulumi:"machineKey"`
	// Managed pipeline mode.
	ManagedPipelineMode *string `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId *int `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// Resource Name.
	Name *string `pulumi:"name"`
	// .NET Framework version.
	NetFrameworkVersion *string `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion *string `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion *string `pulumi:"phpVersion"`
	// Publishing user name.
	PublishingUsername *string `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push *PushSettingsResponse `pulumi:"push"`
	// Version of Python.
	PythonVersion *string `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled *bool `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion *string `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled *bool `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime *string `pulumi:"requestTracingExpirationTime"`
	// Number of reserved instances.
	// This setting only applies to the Consumption Plan
	ReservedInstanceCount *int `pulumi:"reservedInstanceCount"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions []IpSecurityRestrictionResponse `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain *bool `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// SCM type.
	ScmType *string `pulumi:"scmType"`
	// Tracing options.
	TracingOptions *string `pulumi:"tracingOptions"`
	// Resource type.
	Type *string `pulumi:"type"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications []VirtualApplicationResponse `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName *string `pulumi:"vnetName"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled *bool `pulumi:"webSocketsEnabled"`
	// Xenon App Framework and version
	WindowsFxVersion *string `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId *int `pulumi:"xManagedServiceIdentityId"`
}

type WebAppConfigurationState struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn pulumi.BoolPtrInput
	// Information about the formal API definition for the app.
	ApiDefinition ApiDefinitionInfoResponsePtrInput
	// App command line to launch.
	AppCommandLine pulumi.StringPtrInput
	// Application settings.
	AppSettings NameValuePairResponseArrayInput
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled pulumi.BoolPtrInput
	// Auto Heal rules.
	AutoHealRules AutoHealRulesResponsePtrInput
	// Auto-swap slot name.
	AutoSwapSlotName pulumi.StringPtrInput
	// User-provided Azure storage accounts.
	AzureStorageAccounts AzureStorageInfoValueResponseMapInput
	// Connection strings.
	ConnectionStrings ConnStringInfoResponseArrayInput
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors CorsSettingsResponsePtrInput
	// Default documents.
	DefaultDocuments pulumi.StringArrayInput
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled pulumi.BoolPtrInput
	// Document root.
	DocumentRoot pulumi.StringPtrInput
	// This is work around for polymorphic types.
	Experiments ExperimentsResponsePtrInput
	// State of FTP / FTPS service
	FtpsState pulumi.StringPtrInput
	// Handler mappings.
	HandlerMappings HandlerMappingResponseArrayInput
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled pulumi.BoolPtrInput
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled pulumi.BoolPtrInput
	// IP security restrictions for main.
	IpSecurityRestrictions IpSecurityRestrictionResponseArrayInput
	// Java container.
	JavaContainer pulumi.StringPtrInput
	// Java container version.
	JavaContainerVersion pulumi.StringPtrInput
	// Java version.
	JavaVersion pulumi.StringPtrInput
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Site limits.
	Limits SiteLimitsResponsePtrInput
	// Linux App Framework and version
	LinuxFxVersion pulumi.StringPtrInput
	// Site load balancing.
	LoadBalancing pulumi.StringPtrInput
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled pulumi.BoolPtrInput
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit pulumi.IntPtrInput
	// Site MachineKey.
	MachineKey SiteMachineKeyResponsePtrInput
	// Managed pipeline mode.
	ManagedPipelineMode pulumi.StringPtrInput
	// Managed Service Identity Id
	ManagedServiceIdentityId pulumi.IntPtrInput
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion pulumi.StringPtrInput
	// Resource Name.
	Name pulumi.StringPtrInput
	// .NET Framework version.
	NetFrameworkVersion pulumi.StringPtrInput
	// Version of Node.js.
	NodeVersion pulumi.StringPtrInput
	// Number of workers.
	NumberOfWorkers pulumi.IntPtrInput
	// Version of PHP.
	PhpVersion pulumi.StringPtrInput
	// Publishing user name.
	PublishingUsername pulumi.StringPtrInput
	// Push endpoint settings.
	Push PushSettingsResponsePtrInput
	// Version of Python.
	PythonVersion pulumi.StringPtrInput
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled pulumi.BoolPtrInput
	// Remote debugging version.
	RemoteDebuggingVersion pulumi.StringPtrInput
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled pulumi.BoolPtrInput
	// Request tracing expiration time.
	RequestTracingExpirationTime pulumi.StringPtrInput
	// Number of reserved instances.
	// This setting only applies to the Consumption Plan
	ReservedInstanceCount pulumi.IntPtrInput
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions IpSecurityRestrictionResponseArrayInput
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain pulumi.BoolPtrInput
	// SCM type.
	ScmType pulumi.StringPtrInput
	// Tracing options.
	TracingOptions pulumi.StringPtrInput
	// Resource type.
	Type pulumi.StringPtrInput
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess pulumi.BoolPtrInput
	// Virtual applications.
	VirtualApplications VirtualApplicationResponseArrayInput
	// Virtual Network name.
	VnetName pulumi.StringPtrInput
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled pulumi.BoolPtrInput
	// Xenon App Framework and version
	WindowsFxVersion pulumi.StringPtrInput
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId pulumi.IntPtrInput
}

func (WebAppConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppConfigurationState)(nil)).Elem()
}

type webAppConfigurationArgs struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// Information about the formal API definition for the app.
	ApiDefinition *ApiDefinitionInfo `pulumi:"apiDefinition"`
	// App command line to launch.
	AppCommandLine *string `pulumi:"appCommandLine"`
	// Application settings.
	AppSettings []NameValuePair `pulumi:"appSettings"`
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled *bool `pulumi:"autoHealEnabled"`
	// Auto Heal rules.
	AutoHealRules *AutoHealRules `pulumi:"autoHealRules"`
	// Auto-swap slot name.
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// User-provided Azure storage accounts.
	AzureStorageAccounts map[string]AzureStorageInfoValue `pulumi:"azureStorageAccounts"`
	// Connection strings.
	ConnectionStrings []ConnStringInfo `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors *CorsSettings `pulumi:"cors"`
	// Default documents.
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled *bool `pulumi:"detailedErrorLoggingEnabled"`
	// Document root.
	DocumentRoot *string `pulumi:"documentRoot"`
	// This is work around for polymorphic types.
	Experiments *Experiments `pulumi:"experiments"`
	// State of FTP / FTPS service
	FtpsState *string `pulumi:"ftpsState"`
	// Handler mappings.
	HandlerMappings []HandlerMapping `pulumi:"handlerMappings"`
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled *bool `pulumi:"http20Enabled"`
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled *bool `pulumi:"httpLoggingEnabled"`
	// IP security restrictions for main.
	IpSecurityRestrictions []IpSecurityRestriction `pulumi:"ipSecurityRestrictions"`
	// Java container.
	JavaContainer *string `pulumi:"javaContainer"`
	// Java container version.
	JavaContainerVersion *string `pulumi:"javaContainerVersion"`
	// Java version.
	JavaVersion *string `pulumi:"javaVersion"`
	// Kind of resource.
	Kind *string `pulumi:"kind"`
	// Site limits.
	Limits *SiteLimits `pulumi:"limits"`
	// Linux App Framework and version
	LinuxFxVersion *string `pulumi:"linuxFxVersion"`
	// Site load balancing.
	LoadBalancing *string `pulumi:"loadBalancing"`
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled *bool `pulumi:"localMySqlEnabled"`
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit *int `pulumi:"logsDirectorySizeLimit"`
	// Managed pipeline mode.
	ManagedPipelineMode *string `pulumi:"managedPipelineMode"`
	// Managed Service Identity Id
	ManagedServiceIdentityId *int `pulumi:"managedServiceIdentityId"`
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// Name of the app.
	Name string `pulumi:"name"`
	// .NET Framework version.
	NetFrameworkVersion *string `pulumi:"netFrameworkVersion"`
	// Version of Node.js.
	NodeVersion *string `pulumi:"nodeVersion"`
	// Number of workers.
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// Version of PHP.
	PhpVersion *string `pulumi:"phpVersion"`
	// Publishing user name.
	PublishingUsername *string `pulumi:"publishingUsername"`
	// Push endpoint settings.
	Push *PushSettings `pulumi:"push"`
	// Version of Python.
	PythonVersion *string `pulumi:"pythonVersion"`
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled *bool `pulumi:"remoteDebuggingEnabled"`
	// Remote debugging version.
	RemoteDebuggingVersion *string `pulumi:"remoteDebuggingVersion"`
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled *bool `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time.
	RequestTracingExpirationTime *string `pulumi:"requestTracingExpirationTime"`
	// Number of reserved instances.
	// This setting only applies to the Consumption Plan
	ReservedInstanceCount *int `pulumi:"reservedInstanceCount"`
	// Name of the resource group to which the resource belongs.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions []IpSecurityRestriction `pulumi:"scmIpSecurityRestrictions"`
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain *bool `pulumi:"scmIpSecurityRestrictionsUseMain"`
	// SCM type.
	ScmType *string `pulumi:"scmType"`
	// Tracing options.
	TracingOptions *string `pulumi:"tracingOptions"`
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Virtual applications.
	VirtualApplications []VirtualApplication `pulumi:"virtualApplications"`
	// Virtual Network name.
	VnetName *string `pulumi:"vnetName"`
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled *bool `pulumi:"webSocketsEnabled"`
	// Xenon App Framework and version
	WindowsFxVersion *string `pulumi:"windowsFxVersion"`
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId *int `pulumi:"xManagedServiceIdentityId"`
}

// The set of arguments for constructing a WebAppConfiguration resource.
type WebAppConfigurationArgs struct {
	// <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
	AlwaysOn pulumi.BoolPtrInput
	// Information about the formal API definition for the app.
	ApiDefinition ApiDefinitionInfoPtrInput
	// App command line to launch.
	AppCommandLine pulumi.StringPtrInput
	// Application settings.
	AppSettings NameValuePairArrayInput
	// <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
	AutoHealEnabled pulumi.BoolPtrInput
	// Auto Heal rules.
	AutoHealRules AutoHealRulesPtrInput
	// Auto-swap slot name.
	AutoSwapSlotName pulumi.StringPtrInput
	// User-provided Azure storage accounts.
	AzureStorageAccounts AzureStorageInfoValueMapInput
	// Connection strings.
	ConnectionStrings ConnStringInfoArrayInput
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors CorsSettingsPtrInput
	// Default documents.
	DefaultDocuments pulumi.StringArrayInput
	// <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
	DetailedErrorLoggingEnabled pulumi.BoolPtrInput
	// Document root.
	DocumentRoot pulumi.StringPtrInput
	// This is work around for polymorphic types.
	Experiments ExperimentsPtrInput
	// State of FTP / FTPS service
	FtpsState pulumi.StringPtrInput
	// Handler mappings.
	HandlerMappings HandlerMappingArrayInput
	// Http20Enabled: configures a web site to allow clients to connect over http2.0
	Http20Enabled pulumi.BoolPtrInput
	// <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
	HttpLoggingEnabled pulumi.BoolPtrInput
	// IP security restrictions for main.
	IpSecurityRestrictions IpSecurityRestrictionArrayInput
	// Java container.
	JavaContainer pulumi.StringPtrInput
	// Java container version.
	JavaContainerVersion pulumi.StringPtrInput
	// Java version.
	JavaVersion pulumi.StringPtrInput
	// Kind of resource.
	Kind pulumi.StringPtrInput
	// Site limits.
	Limits SiteLimitsPtrInput
	// Linux App Framework and version
	LinuxFxVersion pulumi.StringPtrInput
	// Site load balancing.
	LoadBalancing *SiteLoadBalancing
	// <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
	LocalMySqlEnabled pulumi.BoolPtrInput
	// HTTP logs directory size limit.
	LogsDirectorySizeLimit pulumi.IntPtrInput
	// Managed pipeline mode.
	ManagedPipelineMode *ManagedPipelineMode
	// Managed Service Identity Id
	ManagedServiceIdentityId pulumi.IntPtrInput
	// MinTlsVersion: configures the minimum version of TLS required for SSL requests
	MinTlsVersion pulumi.StringPtrInput
	// Name of the app.
	Name pulumi.StringInput
	// .NET Framework version.
	NetFrameworkVersion pulumi.StringPtrInput
	// Version of Node.js.
	NodeVersion pulumi.StringPtrInput
	// Number of workers.
	NumberOfWorkers pulumi.IntPtrInput
	// Version of PHP.
	PhpVersion pulumi.StringPtrInput
	// Publishing user name.
	PublishingUsername pulumi.StringPtrInput
	// Push endpoint settings.
	Push PushSettingsPtrInput
	// Version of Python.
	PythonVersion pulumi.StringPtrInput
	// <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
	RemoteDebuggingEnabled pulumi.BoolPtrInput
	// Remote debugging version.
	RemoteDebuggingVersion pulumi.StringPtrInput
	// <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
	RequestTracingEnabled pulumi.BoolPtrInput
	// Request tracing expiration time.
	RequestTracingExpirationTime pulumi.StringPtrInput
	// Number of reserved instances.
	// This setting only applies to the Consumption Plan
	ReservedInstanceCount pulumi.IntPtrInput
	// Name of the resource group to which the resource belongs.
	ResourceGroupName pulumi.StringInput
	// IP security restrictions for scm.
	ScmIpSecurityRestrictions IpSecurityRestrictionArrayInput
	// IP security restrictions for scm to use main.
	ScmIpSecurityRestrictionsUseMain pulumi.BoolPtrInput
	// SCM type.
	ScmType pulumi.StringPtrInput
	// Tracing options.
	TracingOptions pulumi.StringPtrInput
	// <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
	Use32BitWorkerProcess pulumi.BoolPtrInput
	// Virtual applications.
	VirtualApplications VirtualApplicationArrayInput
	// Virtual Network name.
	VnetName pulumi.StringPtrInput
	// <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
	WebSocketsEnabled pulumi.BoolPtrInput
	// Xenon App Framework and version
	WindowsFxVersion pulumi.StringPtrInput
	// Explicit Managed Service Identity Id
	XManagedServiceIdentityId pulumi.IntPtrInput
}

func (WebAppConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppConfigurationArgs)(nil)).Elem()
}

type WebAppConfigurationInput interface {
	pulumi.Input

	ToWebAppConfigurationOutput() WebAppConfigurationOutput
	ToWebAppConfigurationOutputWithContext(ctx context.Context) WebAppConfigurationOutput
}

func (*WebAppConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppConfiguration)(nil))
}

func (i *WebAppConfiguration) ToWebAppConfigurationOutput() WebAppConfigurationOutput {
	return i.ToWebAppConfigurationOutputWithContext(context.Background())
}

func (i *WebAppConfiguration) ToWebAppConfigurationOutputWithContext(ctx context.Context) WebAppConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppConfigurationOutput)
}

type WebAppConfigurationOutput struct {
	*pulumi.OutputState
}

func (WebAppConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppConfiguration)(nil))
}

func (o WebAppConfigurationOutput) ToWebAppConfigurationOutput() WebAppConfigurationOutput {
	return o
}

func (o WebAppConfigurationOutput) ToWebAppConfigurationOutputWithContext(ctx context.Context) WebAppConfigurationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(WebAppConfigurationOutput{})
}
