// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170301preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// A group of job targets.
//
// ## Example Usage
// ### Create or update a target group with all properties.
//
// ```go
// package main
//
// import (
// 	sql "github.com/pulumi/pulumi-azurerm/sdk/go/azurerm/sql/v20170301preview"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := sql.NewJobTargetGroup(ctx, "jobTargetGroup", &sql.JobTargetGroupArgs{
// 			JobAgentName: pulumi.String("agent1"),
// 			Members: sql.JobTargetArray{
// 				&sql.JobTargetArgs{
// 					DatabaseName:   pulumi.String("database1"),
// 					MembershipType: pulumi.String("Exclude"),
// 					ServerName:     pulumi.String("server1"),
// 					Type:           pulumi.String("SqlDatabase"),
// 				},
// 				&sql.JobTargetArgs{
// 					MembershipType:    pulumi.String("Include"),
// 					RefreshCredential: pulumi.String("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1/credentials/testCredential"),
// 					ServerName:        pulumi.String("server1"),
// 					Type:              pulumi.String("SqlServer"),
// 				},
// 				&sql.JobTargetArgs{
// 					ElasticPoolName:   pulumi.String("pool1"),
// 					MembershipType:    pulumi.String("Include"),
// 					RefreshCredential: pulumi.String("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1/credentials/testCredential"),
// 					ServerName:        pulumi.String("server2"),
// 					Type:              pulumi.String("SqlElasticPool"),
// 				},
// 				&sql.JobTargetArgs{
// 					DatabaseName:      pulumi.String("database1"),
// 					MembershipType:    pulumi.String("Include"),
// 					RefreshCredential: pulumi.String("/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/group1/providers/Microsoft.Sql/servers/server1/jobAgents/agent1/credentials/testCredential"),
// 					ServerName:        pulumi.String("server3"),
// 					ShardMapName:      pulumi.String("shardMap1"),
// 					Type:              pulumi.String("SqlShardMap"),
// 				},
// 			},
// 			ResourceGroupName: pulumi.String("group1"),
// 			ServerName:        pulumi.String("server1"),
// 			TargetGroupName:   pulumi.String("targetGroup1"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
//
// ```
// ### Create or update a target group with minimal properties.
//
// ```go
// package main
//
// import (
// 	sql "github.com/pulumi/pulumi-azurerm/sdk/go/azurerm/sql/v20170301preview"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := sql.NewJobTargetGroup(ctx, "jobTargetGroup", &sql.JobTargetGroupArgs{
// 			JobAgentName:      pulumi.String("agent1"),
// 			Members:           sql.JobTargetArray{},
// 			ResourceGroupName: pulumi.String("group1"),
// 			ServerName:        pulumi.String("server1"),
// 			TargetGroupName:   pulumi.String("targetGroup1"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
//
// ```
type JobTargetGroup struct {
	pulumi.CustomResourceState

	// Members of the target group.
	Members JobTargetResponseArrayOutput `pulumi:"members"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewJobTargetGroup registers a new resource with the given unique name, arguments, and options.
func NewJobTargetGroup(ctx *pulumi.Context,
	name string, args *JobTargetGroupArgs, opts ...pulumi.ResourceOption) (*JobTargetGroup, error) {
	if args == nil || args.JobAgentName == nil {
		return nil, errors.New("missing required argument 'JobAgentName'")
	}
	if args == nil || args.Members == nil {
		return nil, errors.New("missing required argument 'Members'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.ServerName == nil {
		return nil, errors.New("missing required argument 'ServerName'")
	}
	if args == nil || args.TargetGroupName == nil {
		return nil, errors.New("missing required argument 'TargetGroupName'")
	}
	if args == nil {
		args = &JobTargetGroupArgs{}
	}
	var resource JobTargetGroup
	err := ctx.RegisterResource("azurerm:sql/v20170301preview:JobTargetGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJobTargetGroup gets an existing JobTargetGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJobTargetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobTargetGroupState, opts ...pulumi.ResourceOption) (*JobTargetGroup, error) {
	var resource JobTargetGroup
	err := ctx.ReadResource("azurerm:sql/v20170301preview:JobTargetGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JobTargetGroup resources.
type jobTargetGroupState struct {
	// Members of the target group.
	Members []JobTargetResponse `pulumi:"members"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type JobTargetGroupState struct {
	// Members of the target group.
	Members JobTargetResponseArrayInput
	// Resource name.
	Name pulumi.StringPtrInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (JobTargetGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobTargetGroupState)(nil)).Elem()
}

type jobTargetGroupArgs struct {
	// The name of the job agent.
	JobAgentName string `pulumi:"jobAgentName"`
	// Members of the target group.
	Members []JobTarget `pulumi:"members"`
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the server.
	ServerName string `pulumi:"serverName"`
	// The name of the target group.
	TargetGroupName string `pulumi:"targetGroupName"`
}

// The set of arguments for constructing a JobTargetGroup resource.
type JobTargetGroupArgs struct {
	// The name of the job agent.
	JobAgentName pulumi.StringInput
	// Members of the target group.
	Members JobTargetArrayInput
	// The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
	ResourceGroupName pulumi.StringInput
	// The name of the server.
	ServerName pulumi.StringInput
	// The name of the target group.
	TargetGroupName pulumi.StringInput
}

func (JobTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobTargetGroupArgs)(nil)).Elem()
}
