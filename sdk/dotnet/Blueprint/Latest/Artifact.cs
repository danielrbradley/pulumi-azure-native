// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Blueprint.Latest
{
    /// <summary>
    /// Represents a blueprint artifact.
    /// 
    /// ## Example Usage
    /// ### MG-ARMTemplateArtifact
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var artifact = new AzureRM.Blueprint.Latest.Artifact("artifact", new AzureRM.Blueprint.Latest.ArtifactArgs
    ///         {
    ///             ArtifactName = "storageTemplate",
    ///             BlueprintName = "simpleBlueprint",
    ///             Kind = "template",
    ///             ResourceScope = "providers/Microsoft.Management/managementGroups/ContosoOnlineGroup",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// ### MG-PolicyAssignmentArtifact
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var artifact = new AzureRM.Blueprint.Latest.Artifact("artifact", new AzureRM.Blueprint.Latest.ArtifactArgs
    ///         {
    ///             ArtifactName = "costCenterPolicy",
    ///             BlueprintName = "simpleBlueprint",
    ///             Kind = "policyAssignment",
    ///             ResourceScope = "providers/Microsoft.Management/managementGroups/ContosoOnlineGroup",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// ### MG-RoleAssignmentArtifact
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var artifact = new AzureRM.Blueprint.Latest.Artifact("artifact", new AzureRM.Blueprint.Latest.ArtifactArgs
    ///         {
    ///             ArtifactName = "ownerAssignment",
    ///             BlueprintName = "simpleBlueprint",
    ///             Kind = "roleAssignment",
    ///             ResourceScope = "providers/Microsoft.Management/managementGroups/ContosoOnlineGroup",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// ### Sub-ARMTemplateArtifact
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var artifact = new AzureRM.Blueprint.Latest.Artifact("artifact", new AzureRM.Blueprint.Latest.ArtifactArgs
    ///         {
    ///             ArtifactName = "storageTemplate",
    ///             BlueprintName = "simpleBlueprint",
    ///             Kind = "template",
    ///             ResourceScope = "subscriptions/00000000-0000-0000-0000-000000000000",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// ### Sub-PolicyAssignmentArtifact
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var artifact = new AzureRM.Blueprint.Latest.Artifact("artifact", new AzureRM.Blueprint.Latest.ArtifactArgs
    ///         {
    ///             ArtifactName = "costCenterPolicy",
    ///             BlueprintName = "simpleBlueprint",
    ///             Kind = "policyAssignment",
    ///             ResourceScope = "subscriptions/00000000-0000-0000-0000-000000000000",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// ### Sub-RoleAssignmentArtifact
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var artifact = new AzureRM.Blueprint.Latest.Artifact("artifact", new AzureRM.Blueprint.Latest.ArtifactArgs
    ///         {
    ///             ArtifactName = "ownerAssignment",
    ///             BlueprintName = "simpleBlueprint",
    ///             Kind = "roleAssignment",
    ///             ResourceScope = "subscriptions/00000000-0000-0000-0000-000000000000",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// </summary>
    public partial class Artifact : Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the kind of blueprint artifact.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Name of this resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Type of this resource.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Artifact resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Artifact(string name, ArtifactArgs args, CustomResourceOptions? options = null)
            : base("azurerm:blueprint/latest:Artifact", name, args ?? new ArtifactArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Artifact(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azurerm:blueprint/latest:Artifact", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azurerm:blueprint/v20181101preview:Artifact"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Artifact resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Artifact Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Artifact(name, id, options);
        }
    }

    public sealed class ArtifactArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the blueprint artifact.
        /// </summary>
        [Input("artifactName", required: true)]
        public Input<string> ArtifactName { get; set; } = null!;

        /// <summary>
        /// Name of the blueprint definition.
        /// </summary>
        [Input("blueprintName", required: true)]
        public Input<string> BlueprintName { get; set; } = null!;

        /// <summary>
        /// Specifies the kind of blueprint artifact.
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}').
        /// </summary>
        [Input("resourceScope", required: true)]
        public Input<string> ResourceScope { get; set; } = null!;

        public ArtifactArgs()
        {
        }
    }
}
