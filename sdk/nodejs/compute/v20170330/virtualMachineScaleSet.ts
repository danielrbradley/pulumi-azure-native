// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as utilities from "../../utilities";

/**
 * Describes a Virtual Machine Scale Set.
 *
 * ## Create a custom-image scale set from an unmanaged generalized os image.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azurerm from "@pulumi/azurerm";
 *
 * const virtualMachineScaleSet = new azurerm.compute.v20170330.VirtualMachineScaleSet("virtualMachineScaleSet", {
 *     location: "westus",
 *     overprovision: true,
 *     resourceGroupName: "myResourceGroup",
 *     sku: {
 *         capacity: 3,
 *         name: "Standard_D1_v2",
 *         tier: "Standard",
 *     },
 *     upgradePolicy: {
 *         mode: "Manual",
 *     },
 *     virtualMachineProfile: {
 *         networkProfile: {
 *             networkInterfaceConfigurations: [{
 *                 name: "{vmss-name}",
 *             }],
 *         },
 *         osProfile: {
 *             adminPassword: "{your-password}",
 *             adminUsername: "{your-username}",
 *             computerNamePrefix: "{vmss-name}",
 *         },
 *         storageProfile: {
 *             osDisk: {
 *                 caching: "ReadWrite",
 *                 createOption: "FromImage",
 *                 image: {
 *                     uri: "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/{existing-generalized-os-image-blob-name}.vhd",
 *                 },
 *                 name: "osDisk",
 *             },
 *         },
 *     },
 *     vmScaleSetName: "{vmss-name}",
 * });
 *
 * ```
 *
 * ## Create a platform-image scale set with unmanaged os disks.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azurerm from "@pulumi/azurerm";
 *
 * const virtualMachineScaleSet = new azurerm.compute.v20170330.VirtualMachineScaleSet("virtualMachineScaleSet", {
 *     location: "westus",
 *     overprovision: true,
 *     resourceGroupName: "myResourceGroup",
 *     sku: {
 *         capacity: 3,
 *         name: "Standard_D1_v2",
 *         tier: "Standard",
 *     },
 *     upgradePolicy: {
 *         mode: "Manual",
 *     },
 *     virtualMachineProfile: {
 *         networkProfile: {
 *             networkInterfaceConfigurations: [{
 *                 name: "{vmss-name}",
 *             }],
 *         },
 *         osProfile: {
 *             adminPassword: "{your-password}",
 *             adminUsername: "{your-username}",
 *             computerNamePrefix: "{vmss-name}",
 *         },
 *         storageProfile: {
 *             imageReference: {
 *                 offer: "WindowsServer",
 *                 publisher: "MicrosoftWindowsServer",
 *                 sku: "2016-Datacenter",
 *                 version: "latest",
 *             },
 *             osDisk: {
 *                 caching: "ReadWrite",
 *                 createOption: "FromImage",
 *                 name: "osDisk",
 *                 vhdContainers: [
 *                     "http://{existing-storage-account-name-0}.blob.core.windows.net/vhdContainer",
 *                     "http://{existing-storage-account-name-1}.blob.core.windows.net/vhdContainer",
 *                     "http://{existing-storage-account-name-2}.blob.core.windows.net/vhdContainer",
 *                     "http://{existing-storage-account-name-3}.blob.core.windows.net/vhdContainer",
 *                     "http://{existing-storage-account-name-4}.blob.core.windows.net/vhdContainer",
 *                 ],
 *             },
 *         },
 *     },
 *     vmScaleSetName: "{vmss-name}",
 * });
 *
 * ```
 *
 * ## Create a scale set from a custom image.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azurerm from "@pulumi/azurerm";
 *
 * const virtualMachineScaleSet = new azurerm.compute.v20170330.VirtualMachineScaleSet("virtualMachineScaleSet", {
 *     location: "westus",
 *     overprovision: true,
 *     resourceGroupName: "myResourceGroup",
 *     sku: {
 *         capacity: 3,
 *         name: "Standard_D1_v2",
 *         tier: "Standard",
 *     },
 *     upgradePolicy: {
 *         mode: "Manual",
 *     },
 *     virtualMachineProfile: {
 *         networkProfile: {
 *             networkInterfaceConfigurations: [{
 *                 name: "{vmss-name}",
 *             }],
 *         },
 *         osProfile: {
 *             adminPassword: "{your-password}",
 *             adminUsername: "{your-username}",
 *             computerNamePrefix: "{vmss-name}",
 *         },
 *         storageProfile: {
 *             imageReference: {
 *                 id: "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/{existing-custom-image-name}",
 *             },
 *             osDisk: {
 *                 caching: "ReadWrite",
 *                 createOption: "FromImage",
 *                 managedDisk: {
 *                     storageAccountType: "Standard_LRS",
 *                 },
 *             },
 *         },
 *     },
 *     vmScaleSetName: "{vmss-name}",
 * });
 *
 * ```
 *
 * ## Create a scale set with a marketplace image plan.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azurerm from "@pulumi/azurerm";
 *
 * const virtualMachineScaleSet = new azurerm.compute.v20170330.VirtualMachineScaleSet("virtualMachineScaleSet", {
 *     location: "westus",
 *     overprovision: true,
 *     plan: {
 *         name: "windows2016",
 *         product: "windows-data-science-vm",
 *         publisher: "microsoft-ads",
 *     },
 *     resourceGroupName: "myResourceGroup",
 *     sku: {
 *         capacity: 3,
 *         name: "Standard_D1_v2",
 *         tier: "Standard",
 *     },
 *     upgradePolicy: {
 *         mode: "Manual",
 *     },
 *     virtualMachineProfile: {
 *         networkProfile: {
 *             networkInterfaceConfigurations: [{
 *                 name: "{vmss-name}",
 *             }],
 *         },
 *         osProfile: {
 *             adminPassword: "{your-password}",
 *             adminUsername: "{your-username}",
 *             computerNamePrefix: "{vmss-name}",
 *         },
 *         storageProfile: {
 *             imageReference: {
 *                 offer: "windows-data-science-vm",
 *                 publisher: "microsoft-ads",
 *                 sku: "windows2016",
 *                 version: "latest",
 *             },
 *             osDisk: {
 *                 caching: "ReadWrite",
 *                 createOption: "FromImage",
 *                 managedDisk: {
 *                     storageAccountType: "Standard_LRS",
 *                 },
 *             },
 *         },
 *     },
 *     vmScaleSetName: "{vmss-name}",
 * });
 *
 * ```
 *
 * ## Create a scale set with an azure application gateway.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azurerm from "@pulumi/azurerm";
 *
 * const virtualMachineScaleSet = new azurerm.compute.v20170330.VirtualMachineScaleSet("virtualMachineScaleSet", {
 *     location: "westus",
 *     overprovision: true,
 *     resourceGroupName: "myResourceGroup",
 *     sku: {
 *         capacity: 3,
 *         name: "Standard_D1_v2",
 *         tier: "Standard",
 *     },
 *     upgradePolicy: {
 *         mode: "Manual",
 *     },
 *     virtualMachineProfile: {
 *         networkProfile: {
 *             networkInterfaceConfigurations: [{
 *                 name: "{vmss-name}",
 *             }],
 *         },
 *         osProfile: {
 *             adminPassword: "{your-password}",
 *             adminUsername: "{your-username}",
 *             computerNamePrefix: "{vmss-name}",
 *         },
 *         storageProfile: {
 *             imageReference: {
 *                 offer: "WindowsServer",
 *                 publisher: "MicrosoftWindowsServer",
 *                 sku: "2016-Datacenter",
 *                 version: "latest",
 *             },
 *             osDisk: {
 *                 caching: "ReadWrite",
 *                 createOption: "FromImage",
 *                 managedDisk: {
 *                     storageAccountType: "Standard_LRS",
 *                 },
 *             },
 *         },
 *     },
 *     vmScaleSetName: "{vmss-name}",
 * });
 *
 * ```
 *
 * ## Create a scale set with an azure load balancer.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azurerm from "@pulumi/azurerm";
 *
 * const virtualMachineScaleSet = new azurerm.compute.v20170330.VirtualMachineScaleSet("virtualMachineScaleSet", {
 *     location: "westus",
 *     overprovision: true,
 *     resourceGroupName: "myResourceGroup",
 *     sku: {
 *         capacity: 3,
 *         name: "Standard_D1_v2",
 *         tier: "Standard",
 *     },
 *     upgradePolicy: {
 *         mode: "Manual",
 *     },
 *     virtualMachineProfile: {
 *         networkProfile: {
 *             networkInterfaceConfigurations: [{
 *                 name: "{vmss-name}",
 *             }],
 *         },
 *         osProfile: {
 *             adminPassword: "{your-password}",
 *             adminUsername: "{your-username}",
 *             computerNamePrefix: "{vmss-name}",
 *         },
 *         storageProfile: {
 *             imageReference: {
 *                 offer: "WindowsServer",
 *                 publisher: "MicrosoftWindowsServer",
 *                 sku: "2016-Datacenter",
 *                 version: "latest",
 *             },
 *             osDisk: {
 *                 caching: "ReadWrite",
 *                 createOption: "FromImage",
 *                 managedDisk: {
 *                     storageAccountType: "Standard_LRS",
 *                 },
 *             },
 *         },
 *     },
 *     vmScaleSetName: "{vmss-name}",
 * });
 *
 * ```
 *
 * ## Create a scale set with boot diagnostics.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azurerm from "@pulumi/azurerm";
 *
 * const virtualMachineScaleSet = new azurerm.compute.v20170330.VirtualMachineScaleSet("virtualMachineScaleSet", {
 *     location: "westus",
 *     overprovision: true,
 *     resourceGroupName: "myResourceGroup",
 *     sku: {
 *         capacity: 3,
 *         name: "Standard_D1_v2",
 *         tier: "Standard",
 *     },
 *     upgradePolicy: {
 *         mode: "Manual",
 *     },
 *     virtualMachineProfile: {
 *         diagnosticsProfile: {
 *             bootDiagnostics: {
 *                 enabled: true,
 *                 storageUri: "http://{existing-storage-account-name}.blob.core.windows.net",
 *             },
 *         },
 *         networkProfile: {
 *             networkInterfaceConfigurations: [{
 *                 name: "{vmss-name}",
 *             }],
 *         },
 *         osProfile: {
 *             adminPassword: "{your-password}",
 *             adminUsername: "{your-username}",
 *             computerNamePrefix: "{vmss-name}",
 *         },
 *         storageProfile: {
 *             imageReference: {
 *                 offer: "WindowsServer",
 *                 publisher: "MicrosoftWindowsServer",
 *                 sku: "2016-Datacenter",
 *                 version: "latest",
 *             },
 *             osDisk: {
 *                 caching: "ReadWrite",
 *                 createOption: "FromImage",
 *                 managedDisk: {
 *                     storageAccountType: "Standard_LRS",
 *                 },
 *             },
 *         },
 *     },
 *     vmScaleSetName: "{vmss-name}",
 * });
 *
 * ```
 *
 * ## Create a scale set with empty data disks on each vm.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azurerm from "@pulumi/azurerm";
 *
 * const virtualMachineScaleSet = new azurerm.compute.v20170330.VirtualMachineScaleSet("virtualMachineScaleSet", {
 *     location: "westus",
 *     overprovision: true,
 *     resourceGroupName: "myResourceGroup",
 *     sku: {
 *         capacity: 3,
 *         name: "Standard_D2_v2",
 *         tier: "Standard",
 *     },
 *     upgradePolicy: {
 *         mode: "Manual",
 *     },
 *     virtualMachineProfile: {
 *         networkProfile: {
 *             networkInterfaceConfigurations: [{
 *                 name: "{vmss-name}",
 *             }],
 *         },
 *         osProfile: {
 *             adminPassword: "{your-password}",
 *             adminUsername: "{your-username}",
 *             computerNamePrefix: "{vmss-name}",
 *         },
 *         storageProfile: {
 *             dataDisks: [
 *                 {
 *                     createOption: "Empty",
 *                     diskSizeGB: 1023,
 *                     lun: 0,
 *                 },
 *                 {
 *                     createOption: "Empty",
 *                     diskSizeGB: 1023,
 *                     lun: 1,
 *                 },
 *             ],
 *             imageReference: {
 *                 offer: "WindowsServer",
 *                 publisher: "MicrosoftWindowsServer",
 *                 sku: "2016-Datacenter",
 *                 version: "latest",
 *             },
 *             osDisk: {
 *                 caching: "ReadWrite",
 *                 createOption: "FromImage",
 *                 managedDisk: {
 *                     storageAccountType: "Standard_LRS",
 *                 },
 *             },
 *         },
 *     },
 *     vmScaleSetName: "{vmss-name}",
 * });
 *
 * ```
 *
 * ## Create a scale set with password authentication.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azurerm from "@pulumi/azurerm";
 *
 * const virtualMachineScaleSet = new azurerm.compute.v20170330.VirtualMachineScaleSet("virtualMachineScaleSet", {
 *     location: "westus",
 *     overprovision: true,
 *     resourceGroupName: "myResourceGroup",
 *     sku: {
 *         capacity: 3,
 *         name: "Standard_D1_v2",
 *         tier: "Standard",
 *     },
 *     upgradePolicy: {
 *         mode: "Manual",
 *     },
 *     virtualMachineProfile: {
 *         networkProfile: {
 *             networkInterfaceConfigurations: [{
 *                 name: "{vmss-name}",
 *             }],
 *         },
 *         osProfile: {
 *             adminPassword: "{your-password}",
 *             adminUsername: "{your-username}",
 *             computerNamePrefix: "{vmss-name}",
 *         },
 *         storageProfile: {
 *             imageReference: {
 *                 offer: "WindowsServer",
 *                 publisher: "MicrosoftWindowsServer",
 *                 sku: "2016-Datacenter",
 *                 version: "latest",
 *             },
 *             osDisk: {
 *                 caching: "ReadWrite",
 *                 createOption: "FromImage",
 *                 managedDisk: {
 *                     storageAccountType: "Standard_LRS",
 *                 },
 *             },
 *         },
 *     },
 *     vmScaleSetName: "{vmss-name}",
 * });
 *
 * ```
 *
 * ## Create a scale set with premium storage.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azurerm from "@pulumi/azurerm";
 *
 * const virtualMachineScaleSet = new azurerm.compute.v20170330.VirtualMachineScaleSet("virtualMachineScaleSet", {
 *     location: "westus",
 *     overprovision: true,
 *     resourceGroupName: "myResourceGroup",
 *     sku: {
 *         capacity: 3,
 *         name: "Standard_D1_v2",
 *         tier: "Standard",
 *     },
 *     upgradePolicy: {
 *         mode: "Manual",
 *     },
 *     virtualMachineProfile: {
 *         networkProfile: {
 *             networkInterfaceConfigurations: [{
 *                 name: "{vmss-name}",
 *             }],
 *         },
 *         osProfile: {
 *             adminPassword: "{your-password}",
 *             adminUsername: "{your-username}",
 *             computerNamePrefix: "{vmss-name}",
 *         },
 *         storageProfile: {
 *             imageReference: {
 *                 offer: "WindowsServer",
 *                 publisher: "MicrosoftWindowsServer",
 *                 sku: "2016-Datacenter",
 *                 version: "latest",
 *             },
 *             osDisk: {
 *                 caching: "ReadWrite",
 *                 createOption: "FromImage",
 *                 managedDisk: {
 *                     storageAccountType: "Premium_LRS",
 *                 },
 *             },
 *         },
 *     },
 *     vmScaleSetName: "{vmss-name}",
 * });
 *
 * ```
 *
 * ## Create a scale set with ssh authentication.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azurerm from "@pulumi/azurerm";
 *
 * const virtualMachineScaleSet = new azurerm.compute.v20170330.VirtualMachineScaleSet("virtualMachineScaleSet", {
 *     location: "westus",
 *     overprovision: true,
 *     resourceGroupName: "myResourceGroup",
 *     sku: {
 *         capacity: 3,
 *         name: "Standard_D1_v2",
 *         tier: "Standard",
 *     },
 *     upgradePolicy: {
 *         mode: "Manual",
 *     },
 *     virtualMachineProfile: {
 *         networkProfile: {
 *             networkInterfaceConfigurations: [{
 *                 name: "{vmss-name}",
 *             }],
 *         },
 *         osProfile: {
 *             adminUsername: "{your-username}",
 *             computerNamePrefix: "{vmss-name}",
 *             linuxConfiguration: {
 *                 disablePasswordAuthentication: true,
 *                 ssh: {
 *                     publicKeys: [{
 *                         keyData: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCeClRAk2ipUs/l5voIsDC5q9RI+YSRd1Bvd/O+axgY4WiBzG+4FwJWZm/mLLe5DoOdHQwmU2FrKXZSW4w2sYE70KeWnrFViCOX5MTVvJgPE8ClugNl8RWth/tU849DvM9sT7vFgfVSHcAS2yDRyDlueii+8nF2ym8XWAPltFVCyLHRsyBp5YPqK8JFYIa1eybKsY3hEAxRCA+/7bq8et+Gj3coOsuRmrehav7rE6N12Pb80I6ofa6SM5XNYq4Xk0iYNx7R3kdz0Jj9XgZYWjAHjJmT0gTRoOnt6upOuxK7xI/ykWrllgpXrCPu3Ymz+c+ujaqcxDopnAl2lmf69/J1",
 *                         path: "/home/{your-username}/.ssh/authorized_keys",
 *                     }],
 *                 },
 *             },
 *         },
 *         storageProfile: {
 *             imageReference: {
 *                 offer: "WindowsServer",
 *                 publisher: "MicrosoftWindowsServer",
 *                 sku: "2016-Datacenter",
 *                 version: "latest",
 *             },
 *             osDisk: {
 *                 caching: "ReadWrite",
 *                 createOption: "FromImage",
 *                 managedDisk: {
 *                     storageAccountType: "Standard_LRS",
 *                 },
 *             },
 *         },
 *     },
 *     vmScaleSetName: "{vmss-name}",
 * });
 *
 * ```
 */
export class VirtualMachineScaleSet extends pulumi.CustomResource {
    /**
     * Get an existing VirtualMachineScaleSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VirtualMachineScaleSet {
        return new VirtualMachineScaleSet(name, undefined, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azurerm:compute/v20170330:VirtualMachineScaleSet';

    /**
     * Returns true if the given object is an instance of VirtualMachineScaleSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VirtualMachineScaleSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualMachineScaleSet.__pulumiType;
    }

    /**
     * The identity of the virtual machine scale set, if configured.
     */
    public readonly identity!: pulumi.Output<outputs.compute.v20170330.VirtualMachineScaleSetIdentityResponse | undefined>;
    /**
     * Resource location
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Resource name
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Specifies whether the Virtual Machine Scale Set should be overprovisioned.
     */
    public readonly overprovision!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
     */
    public readonly plan!: pulumi.Output<outputs.compute.v20170330.PlanResponse | undefined>;
    /**
     * The provisioning state, which only appears in the response.
     */
    public /*out*/ readonly provisioningState!: pulumi.Output<string>;
    /**
     * When true this limits the scale set to a single placement group, of max size 100 virtual machines.
     */
    public readonly singlePlacementGroup!: pulumi.Output<boolean | undefined>;
    /**
     * The virtual machine scale set sku.
     */
    public readonly sku!: pulumi.Output<outputs.compute.v20170330.SkuResponse | undefined>;
    /**
     * Resource tags
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Specifies the ID which uniquely identifies a Virtual Machine Scale Set.
     */
    public /*out*/ readonly uniqueId!: pulumi.Output<string>;
    /**
     * The upgrade policy.
     */
    public readonly upgradePolicy!: pulumi.Output<outputs.compute.v20170330.UpgradePolicyResponse | undefined>;
    /**
     * The virtual machine profile.
     */
    public readonly virtualMachineProfile!: pulumi.Output<outputs.compute.v20170330.VirtualMachineScaleSetVMProfileResponse | undefined>;
    /**
     * The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set.
     */
    public readonly zones!: pulumi.Output<string[] | undefined>;

    /**
     * Create a VirtualMachineScaleSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualMachineScaleSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, state: undefined, opts: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VirtualMachineScaleSetArgs, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (!(opts && opts.id)) {
            const args = argsOrState as VirtualMachineScaleSetArgs | undefined;
            if (!args || args.location === undefined) {
                throw new Error("Missing required property 'location'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.vmScaleSetName === undefined) {
                throw new Error("Missing required property 'vmScaleSetName'");
            }
            inputs["identity"] = args ? args.identity : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["overprovision"] = args ? args.overprovision : undefined;
            inputs["plan"] = args ? args.plan : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["singlePlacementGroup"] = args ? args.singlePlacementGroup : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["upgradePolicy"] = args ? args.upgradePolicy : undefined;
            inputs["virtualMachineProfile"] = args ? args.virtualMachineProfile : undefined;
            inputs["vmScaleSetName"] = args ? args.vmScaleSetName : undefined;
            inputs["zones"] = args ? args.zones : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["provisioningState"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
            inputs["uniqueId"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        const aliasOpts = { aliases: [{ type: "azurerm:compute/latest:VirtualMachineScaleSet" }, { type: "azurerm:compute/v20150615:VirtualMachineScaleSet" }, { type: "azurerm:compute/v20160330:VirtualMachineScaleSet" }, { type: "azurerm:compute/v20171201:VirtualMachineScaleSet" }, { type: "azurerm:compute/v20180401:VirtualMachineScaleSet" }, { type: "azurerm:compute/v20180601:VirtualMachineScaleSet" }, { type: "azurerm:compute/v20181001:VirtualMachineScaleSet" }, { type: "azurerm:compute/v20190301:VirtualMachineScaleSet" }, { type: "azurerm:compute/v20190701:VirtualMachineScaleSet" }, { type: "azurerm:compute/v20191201:VirtualMachineScaleSet" }, { type: "azurerm:compute/v20200601:VirtualMachineScaleSet" }] };
        opts = opts ? pulumi.mergeOptions(opts, aliasOpts) : aliasOpts;
        super(VirtualMachineScaleSet.__pulumiType, name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a VirtualMachineScaleSet resource.
 */
export interface VirtualMachineScaleSetArgs {
    /**
     * The identity of the virtual machine scale set, if configured.
     */
    readonly identity?: pulumi.Input<inputs.compute.v20170330.VirtualMachineScaleSetIdentity>;
    /**
     * Resource location
     */
    readonly location: pulumi.Input<string>;
    /**
     * Specifies whether the Virtual Machine Scale Set should be overprovisioned.
     */
    readonly overprovision?: pulumi.Input<boolean>;
    /**
     * Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
     */
    readonly plan?: pulumi.Input<inputs.compute.v20170330.Plan>;
    /**
     * The name of the resource group.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * When true this limits the scale set to a single placement group, of max size 100 virtual machines.
     */
    readonly singlePlacementGroup?: pulumi.Input<boolean>;
    /**
     * The virtual machine scale set sku.
     */
    readonly sku?: pulumi.Input<inputs.compute.v20170330.Sku>;
    /**
     * Resource tags
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The upgrade policy.
     */
    readonly upgradePolicy?: pulumi.Input<inputs.compute.v20170330.UpgradePolicy>;
    /**
     * The virtual machine profile.
     */
    readonly virtualMachineProfile?: pulumi.Input<inputs.compute.v20170330.VirtualMachineScaleSetVMProfile>;
    /**
     * The name of the VM scale set to create or update.
     */
    readonly vmScaleSetName: pulumi.Input<string>;
    /**
     * The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set.
     */
    readonly zones?: pulumi.Input<pulumi.Input<string>[]>;
}
