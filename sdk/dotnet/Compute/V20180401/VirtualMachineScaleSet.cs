// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.Compute.V20180401
{
    /// <summary>
    /// Describes a Virtual Machine Scale Set.
    /// 
    /// ## Create a custom-image scale set from an unmanaged generalized os image.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var virtualMachineScaleSet = new AzureRM.Compute.V20180401.VirtualMachineScaleSet("virtualMachineScaleSet", new AzureRM.Compute.V20180401.VirtualMachineScaleSetArgs
    ///         {
    ///             Location = "westus",
    ///             Overprovision = true,
    ///             ResourceGroupName = "myResourceGroup",
    ///             Sku = new AzureRM.Compute.V20180401.Inputs.SkuArgs
    ///             {
    ///                 Capacity = 3,
    ///                 Name = "Standard_D1_v2",
    ///                 Tier = "Standard",
    ///             },
    ///             UpgradePolicy = new AzureRM.Compute.V20180401.Inputs.UpgradePolicyArgs
    ///             {
    ///                 Mode = "Manual",
    ///             },
    ///             VirtualMachineProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///             {
    ///                 NetworkProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///                 {
    ///                     NetworkInterfaceConfigurations = 
    ///                     {
    ///                         new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                         {
    ///                             Name = "{vmss-name}",
    ///                         },
    ///                     },
    ///                 },
    ///                 OsProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///                 {
    ///                     AdminPassword = "{your-password}",
    ///                     AdminUsername = "{your-username}",
    ///                     ComputerNamePrefix = "{vmss-name}",
    ///                 },
    ///                 StorageProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///                 {
    ///                     OsDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                     {
    ///                         Caching = "ReadWrite",
    ///                         CreateOption = "FromImage",
    ///                         Image = new AzureRM.Compute.V20180401.Inputs.VirtualHardDiskArgs
    ///                         {
    ///                             Uri = "http://{existing-storage-account-name}.blob.core.windows.net/{existing-container-name}/{existing-generalized-os-image-blob-name}.vhd",
    ///                         },
    ///                         Name = "osDisk",
    ///                     },
    ///                 },
    ///             },
    ///             VmScaleSetName = "{vmss-name}",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// 
    /// ## Create a platform-image scale set with unmanaged os disks.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var virtualMachineScaleSet = new AzureRM.Compute.V20180401.VirtualMachineScaleSet("virtualMachineScaleSet", new AzureRM.Compute.V20180401.VirtualMachineScaleSetArgs
    ///         {
    ///             Location = "westus",
    ///             Overprovision = true,
    ///             ResourceGroupName = "myResourceGroup",
    ///             Sku = new AzureRM.Compute.V20180401.Inputs.SkuArgs
    ///             {
    ///                 Capacity = 3,
    ///                 Name = "Standard_D1_v2",
    ///                 Tier = "Standard",
    ///             },
    ///             UpgradePolicy = new AzureRM.Compute.V20180401.Inputs.UpgradePolicyArgs
    ///             {
    ///                 Mode = "Manual",
    ///             },
    ///             VirtualMachineProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///             {
    ///                 NetworkProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///                 {
    ///                     NetworkInterfaceConfigurations = 
    ///                     {
    ///                         new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                         {
    ///                             Name = "{vmss-name}",
    ///                         },
    ///                     },
    ///                 },
    ///                 OsProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///                 {
    ///                     AdminPassword = "{your-password}",
    ///                     AdminUsername = "{your-username}",
    ///                     ComputerNamePrefix = "{vmss-name}",
    ///                 },
    ///                 StorageProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///                 {
    ///                     ImageReference = new AzureRM.Compute.V20180401.Inputs.ImageReferenceArgs
    ///                     {
    ///                         Offer = "WindowsServer",
    ///                         Publisher = "MicrosoftWindowsServer",
    ///                         Sku = "2016-Datacenter",
    ///                         Version = "latest",
    ///                     },
    ///                     OsDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                     {
    ///                         Caching = "ReadWrite",
    ///                         CreateOption = "FromImage",
    ///                         Name = "osDisk",
    ///                         VhdContainers = 
    ///                         {
    ///                             "http://{existing-storage-account-name-0}.blob.core.windows.net/vhdContainer",
    ///                             "http://{existing-storage-account-name-1}.blob.core.windows.net/vhdContainer",
    ///                             "http://{existing-storage-account-name-2}.blob.core.windows.net/vhdContainer",
    ///                             "http://{existing-storage-account-name-3}.blob.core.windows.net/vhdContainer",
    ///                             "http://{existing-storage-account-name-4}.blob.core.windows.net/vhdContainer",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             VmScaleSetName = "{vmss-name}",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// 
    /// ## Create a scale set from a custom image.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var virtualMachineScaleSet = new AzureRM.Compute.V20180401.VirtualMachineScaleSet("virtualMachineScaleSet", new AzureRM.Compute.V20180401.VirtualMachineScaleSetArgs
    ///         {
    ///             Location = "westus",
    ///             Overprovision = true,
    ///             ResourceGroupName = "myResourceGroup",
    ///             Sku = new AzureRM.Compute.V20180401.Inputs.SkuArgs
    ///             {
    ///                 Capacity = 3,
    ///                 Name = "Standard_D1_v2",
    ///                 Tier = "Standard",
    ///             },
    ///             UpgradePolicy = new AzureRM.Compute.V20180401.Inputs.UpgradePolicyArgs
    ///             {
    ///                 Mode = "Manual",
    ///             },
    ///             VirtualMachineProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///             {
    ///                 NetworkProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///                 {
    ///                     NetworkInterfaceConfigurations = 
    ///                     {
    ///                         new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                         {
    ///                             Name = "{vmss-name}",
    ///                         },
    ///                     },
    ///                 },
    ///                 OsProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///                 {
    ///                     AdminPassword = "{your-password}",
    ///                     AdminUsername = "{your-username}",
    ///                     ComputerNamePrefix = "{vmss-name}",
    ///                 },
    ///                 StorageProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///                 {
    ///                     ImageReference = new AzureRM.Compute.V20180401.Inputs.ImageReferenceArgs
    ///                     {
    ///                         Id = "/subscriptions/{subscription-id}/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/{existing-custom-image-name}",
    ///                     },
    ///                     OsDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                     {
    ///                         Caching = "ReadWrite",
    ///                         CreateOption = "FromImage",
    ///                         ManagedDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                         {
    ///                             StorageAccountType = "Standard_LRS",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             VmScaleSetName = "{vmss-name}",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// 
    /// ## Create a scale set with a marketplace image plan.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var virtualMachineScaleSet = new AzureRM.Compute.V20180401.VirtualMachineScaleSet("virtualMachineScaleSet", new AzureRM.Compute.V20180401.VirtualMachineScaleSetArgs
    ///         {
    ///             Location = "westus",
    ///             Overprovision = true,
    ///             Plan = new AzureRM.Compute.V20180401.Inputs.PlanArgs
    ///             {
    ///                 Name = "windows2016",
    ///                 Product = "windows-data-science-vm",
    ///                 Publisher = "microsoft-ads",
    ///             },
    ///             ResourceGroupName = "myResourceGroup",
    ///             Sku = new AzureRM.Compute.V20180401.Inputs.SkuArgs
    ///             {
    ///                 Capacity = 3,
    ///                 Name = "Standard_D1_v2",
    ///                 Tier = "Standard",
    ///             },
    ///             UpgradePolicy = new AzureRM.Compute.V20180401.Inputs.UpgradePolicyArgs
    ///             {
    ///                 Mode = "Manual",
    ///             },
    ///             VirtualMachineProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///             {
    ///                 NetworkProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///                 {
    ///                     NetworkInterfaceConfigurations = 
    ///                     {
    ///                         new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                         {
    ///                             Name = "{vmss-name}",
    ///                         },
    ///                     },
    ///                 },
    ///                 OsProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///                 {
    ///                     AdminPassword = "{your-password}",
    ///                     AdminUsername = "{your-username}",
    ///                     ComputerNamePrefix = "{vmss-name}",
    ///                 },
    ///                 StorageProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///                 {
    ///                     ImageReference = new AzureRM.Compute.V20180401.Inputs.ImageReferenceArgs
    ///                     {
    ///                         Offer = "windows-data-science-vm",
    ///                         Publisher = "microsoft-ads",
    ///                         Sku = "windows2016",
    ///                         Version = "latest",
    ///                     },
    ///                     OsDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                     {
    ///                         Caching = "ReadWrite",
    ///                         CreateOption = "FromImage",
    ///                         ManagedDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                         {
    ///                             StorageAccountType = "Standard_LRS",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             VmScaleSetName = "{vmss-name}",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// 
    /// ## Create a scale set with an azure application gateway.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var virtualMachineScaleSet = new AzureRM.Compute.V20180401.VirtualMachineScaleSet("virtualMachineScaleSet", new AzureRM.Compute.V20180401.VirtualMachineScaleSetArgs
    ///         {
    ///             Location = "westus",
    ///             Overprovision = true,
    ///             ResourceGroupName = "myResourceGroup",
    ///             Sku = new AzureRM.Compute.V20180401.Inputs.SkuArgs
    ///             {
    ///                 Capacity = 3,
    ///                 Name = "Standard_D1_v2",
    ///                 Tier = "Standard",
    ///             },
    ///             UpgradePolicy = new AzureRM.Compute.V20180401.Inputs.UpgradePolicyArgs
    ///             {
    ///                 Mode = "Manual",
    ///             },
    ///             VirtualMachineProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///             {
    ///                 NetworkProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///                 {
    ///                     NetworkInterfaceConfigurations = 
    ///                     {
    ///                         new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                         {
    ///                             Name = "{vmss-name}",
    ///                         },
    ///                     },
    ///                 },
    ///                 OsProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///                 {
    ///                     AdminPassword = "{your-password}",
    ///                     AdminUsername = "{your-username}",
    ///                     ComputerNamePrefix = "{vmss-name}",
    ///                 },
    ///                 StorageProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///                 {
    ///                     ImageReference = new AzureRM.Compute.V20180401.Inputs.ImageReferenceArgs
    ///                     {
    ///                         Offer = "WindowsServer",
    ///                         Publisher = "MicrosoftWindowsServer",
    ///                         Sku = "2016-Datacenter",
    ///                         Version = "latest",
    ///                     },
    ///                     OsDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                     {
    ///                         Caching = "ReadWrite",
    ///                         CreateOption = "FromImage",
    ///                         ManagedDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                         {
    ///                             StorageAccountType = "Standard_LRS",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             VmScaleSetName = "{vmss-name}",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// 
    /// ## Create a scale set with an azure load balancer.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var virtualMachineScaleSet = new AzureRM.Compute.V20180401.VirtualMachineScaleSet("virtualMachineScaleSet", new AzureRM.Compute.V20180401.VirtualMachineScaleSetArgs
    ///         {
    ///             Location = "westus",
    ///             Overprovision = true,
    ///             ResourceGroupName = "myResourceGroup",
    ///             Sku = new AzureRM.Compute.V20180401.Inputs.SkuArgs
    ///             {
    ///                 Capacity = 3,
    ///                 Name = "Standard_D1_v2",
    ///                 Tier = "Standard",
    ///             },
    ///             UpgradePolicy = new AzureRM.Compute.V20180401.Inputs.UpgradePolicyArgs
    ///             {
    ///                 Mode = "Manual",
    ///             },
    ///             VirtualMachineProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///             {
    ///                 NetworkProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///                 {
    ///                     NetworkInterfaceConfigurations = 
    ///                     {
    ///                         new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                         {
    ///                             Name = "{vmss-name}",
    ///                         },
    ///                     },
    ///                 },
    ///                 OsProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///                 {
    ///                     AdminPassword = "{your-password}",
    ///                     AdminUsername = "{your-username}",
    ///                     ComputerNamePrefix = "{vmss-name}",
    ///                 },
    ///                 StorageProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///                 {
    ///                     ImageReference = new AzureRM.Compute.V20180401.Inputs.ImageReferenceArgs
    ///                     {
    ///                         Offer = "WindowsServer",
    ///                         Publisher = "MicrosoftWindowsServer",
    ///                         Sku = "2016-Datacenter",
    ///                         Version = "latest",
    ///                     },
    ///                     OsDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                     {
    ///                         Caching = "ReadWrite",
    ///                         CreateOption = "FromImage",
    ///                         ManagedDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                         {
    ///                             StorageAccountType = "Standard_LRS",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             VmScaleSetName = "{vmss-name}",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// 
    /// ## Create a scale set with boot diagnostics.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var virtualMachineScaleSet = new AzureRM.Compute.V20180401.VirtualMachineScaleSet("virtualMachineScaleSet", new AzureRM.Compute.V20180401.VirtualMachineScaleSetArgs
    ///         {
    ///             Location = "westus",
    ///             Overprovision = true,
    ///             ResourceGroupName = "myResourceGroup",
    ///             Sku = new AzureRM.Compute.V20180401.Inputs.SkuArgs
    ///             {
    ///                 Capacity = 3,
    ///                 Name = "Standard_D1_v2",
    ///                 Tier = "Standard",
    ///             },
    ///             UpgradePolicy = new AzureRM.Compute.V20180401.Inputs.UpgradePolicyArgs
    ///             {
    ///                 Mode = "Manual",
    ///             },
    ///             VirtualMachineProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///             {
    ///                 DiagnosticsProfile = new AzureRM.Compute.V20180401.Inputs.DiagnosticsProfileArgs
    ///                 {
    ///                     BootDiagnostics = new AzureRM.Compute.V20180401.Inputs.BootDiagnosticsArgs
    ///                     {
    ///                         Enabled = true,
    ///                         StorageUri = "http://{existing-storage-account-name}.blob.core.windows.net",
    ///                     },
    ///                 },
    ///                 NetworkProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///                 {
    ///                     NetworkInterfaceConfigurations = 
    ///                     {
    ///                         new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                         {
    ///                             Name = "{vmss-name}",
    ///                         },
    ///                     },
    ///                 },
    ///                 OsProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///                 {
    ///                     AdminPassword = "{your-password}",
    ///                     AdminUsername = "{your-username}",
    ///                     ComputerNamePrefix = "{vmss-name}",
    ///                 },
    ///                 StorageProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///                 {
    ///                     ImageReference = new AzureRM.Compute.V20180401.Inputs.ImageReferenceArgs
    ///                     {
    ///                         Offer = "WindowsServer",
    ///                         Publisher = "MicrosoftWindowsServer",
    ///                         Sku = "2016-Datacenter",
    ///                         Version = "latest",
    ///                     },
    ///                     OsDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                     {
    ///                         Caching = "ReadWrite",
    ///                         CreateOption = "FromImage",
    ///                         ManagedDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                         {
    ///                             StorageAccountType = "Standard_LRS",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             VmScaleSetName = "{vmss-name}",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// 
    /// ## Create a scale set with empty data disks on each vm.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var virtualMachineScaleSet = new AzureRM.Compute.V20180401.VirtualMachineScaleSet("virtualMachineScaleSet", new AzureRM.Compute.V20180401.VirtualMachineScaleSetArgs
    ///         {
    ///             Location = "westus",
    ///             Overprovision = true,
    ///             ResourceGroupName = "myResourceGroup",
    ///             Sku = new AzureRM.Compute.V20180401.Inputs.SkuArgs
    ///             {
    ///                 Capacity = 3,
    ///                 Name = "Standard_D2_v2",
    ///                 Tier = "Standard",
    ///             },
    ///             UpgradePolicy = new AzureRM.Compute.V20180401.Inputs.UpgradePolicyArgs
    ///             {
    ///                 Mode = "Manual",
    ///             },
    ///             VirtualMachineProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///             {
    ///                 NetworkProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///                 {
    ///                     NetworkInterfaceConfigurations = 
    ///                     {
    ///                         new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                         {
    ///                             Name = "{vmss-name}",
    ///                         },
    ///                     },
    ///                 },
    ///                 OsProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///                 {
    ///                     AdminPassword = "{your-password}",
    ///                     AdminUsername = "{your-username}",
    ///                     ComputerNamePrefix = "{vmss-name}",
    ///                 },
    ///                 StorageProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///                 {
    ///                     DataDisks = 
    ///                     {
    ///                         new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetDataDiskArgs
    ///                         {
    ///                             CreateOption = "Empty",
    ///                             DiskSizeGB = 1023,
    ///                             Lun = 0,
    ///                         },
    ///                         new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetDataDiskArgs
    ///                         {
    ///                             CreateOption = "Empty",
    ///                             DiskSizeGB = 1023,
    ///                             Lun = 1,
    ///                         },
    ///                     },
    ///                     ImageReference = new AzureRM.Compute.V20180401.Inputs.ImageReferenceArgs
    ///                     {
    ///                         Offer = "WindowsServer",
    ///                         Publisher = "MicrosoftWindowsServer",
    ///                         Sku = "2016-Datacenter",
    ///                         Version = "latest",
    ///                     },
    ///                     OsDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                     {
    ///                         Caching = "ReadWrite",
    ///                         CreateOption = "FromImage",
    ///                         DiskSizeGB = 512,
    ///                         ManagedDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                         {
    ///                             StorageAccountType = "Standard_LRS",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             VmScaleSetName = "{vmss-name}",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// 
    /// ## Create a scale set with password authentication.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var virtualMachineScaleSet = new AzureRM.Compute.V20180401.VirtualMachineScaleSet("virtualMachineScaleSet", new AzureRM.Compute.V20180401.VirtualMachineScaleSetArgs
    ///         {
    ///             Location = "westus",
    ///             Overprovision = true,
    ///             ResourceGroupName = "myResourceGroup",
    ///             Sku = new AzureRM.Compute.V20180401.Inputs.SkuArgs
    ///             {
    ///                 Capacity = 3,
    ///                 Name = "Standard_D1_v2",
    ///                 Tier = "Standard",
    ///             },
    ///             UpgradePolicy = new AzureRM.Compute.V20180401.Inputs.UpgradePolicyArgs
    ///             {
    ///                 Mode = "Manual",
    ///             },
    ///             VirtualMachineProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///             {
    ///                 NetworkProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///                 {
    ///                     NetworkInterfaceConfigurations = 
    ///                     {
    ///                         new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                         {
    ///                             Name = "{vmss-name}",
    ///                         },
    ///                     },
    ///                 },
    ///                 OsProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///                 {
    ///                     AdminPassword = "{your-password}",
    ///                     AdminUsername = "{your-username}",
    ///                     ComputerNamePrefix = "{vmss-name}",
    ///                 },
    ///                 StorageProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///                 {
    ///                     ImageReference = new AzureRM.Compute.V20180401.Inputs.ImageReferenceArgs
    ///                     {
    ///                         Offer = "WindowsServer",
    ///                         Publisher = "MicrosoftWindowsServer",
    ///                         Sku = "2016-Datacenter",
    ///                         Version = "latest",
    ///                     },
    ///                     OsDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                     {
    ///                         Caching = "ReadWrite",
    ///                         CreateOption = "FromImage",
    ///                         ManagedDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                         {
    ///                             StorageAccountType = "Standard_LRS",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             VmScaleSetName = "{vmss-name}",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// 
    /// ## Create a scale set with premium storage.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var virtualMachineScaleSet = new AzureRM.Compute.V20180401.VirtualMachineScaleSet("virtualMachineScaleSet", new AzureRM.Compute.V20180401.VirtualMachineScaleSetArgs
    ///         {
    ///             Location = "westus",
    ///             Overprovision = true,
    ///             ResourceGroupName = "myResourceGroup",
    ///             Sku = new AzureRM.Compute.V20180401.Inputs.SkuArgs
    ///             {
    ///                 Capacity = 3,
    ///                 Name = "Standard_D1_v2",
    ///                 Tier = "Standard",
    ///             },
    ///             UpgradePolicy = new AzureRM.Compute.V20180401.Inputs.UpgradePolicyArgs
    ///             {
    ///                 Mode = "Manual",
    ///             },
    ///             VirtualMachineProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///             {
    ///                 NetworkProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///                 {
    ///                     NetworkInterfaceConfigurations = 
    ///                     {
    ///                         new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                         {
    ///                             Name = "{vmss-name}",
    ///                         },
    ///                     },
    ///                 },
    ///                 OsProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///                 {
    ///                     AdminPassword = "{your-password}",
    ///                     AdminUsername = "{your-username}",
    ///                     ComputerNamePrefix = "{vmss-name}",
    ///                 },
    ///                 StorageProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///                 {
    ///                     ImageReference = new AzureRM.Compute.V20180401.Inputs.ImageReferenceArgs
    ///                     {
    ///                         Offer = "WindowsServer",
    ///                         Publisher = "MicrosoftWindowsServer",
    ///                         Sku = "2016-Datacenter",
    ///                         Version = "latest",
    ///                     },
    ///                     OsDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                     {
    ///                         Caching = "ReadWrite",
    ///                         CreateOption = "FromImage",
    ///                         ManagedDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                         {
    ///                             StorageAccountType = "Premium_LRS",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             VmScaleSetName = "{vmss-name}",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// 
    /// ## Create a scale set with ssh authentication.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var virtualMachineScaleSet = new AzureRM.Compute.V20180401.VirtualMachineScaleSet("virtualMachineScaleSet", new AzureRM.Compute.V20180401.VirtualMachineScaleSetArgs
    ///         {
    ///             Location = "westus",
    ///             Overprovision = true,
    ///             ResourceGroupName = "myResourceGroup",
    ///             Sku = new AzureRM.Compute.V20180401.Inputs.SkuArgs
    ///             {
    ///                 Capacity = 3,
    ///                 Name = "Standard_D1_v2",
    ///                 Tier = "Standard",
    ///             },
    ///             UpgradePolicy = new AzureRM.Compute.V20180401.Inputs.UpgradePolicyArgs
    ///             {
    ///                 Mode = "Manual",
    ///             },
    ///             VirtualMachineProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///             {
    ///                 NetworkProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///                 {
    ///                     NetworkInterfaceConfigurations = 
    ///                     {
    ///                         new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                         {
    ///                             Name = "{vmss-name}",
    ///                         },
    ///                     },
    ///                 },
    ///                 OsProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///                 {
    ///                     AdminUsername = "{your-username}",
    ///                     ComputerNamePrefix = "{vmss-name}",
    ///                     LinuxConfiguration = new AzureRM.Compute.V20180401.Inputs.LinuxConfigurationArgs
    ///                     {
    ///                         DisablePasswordAuthentication = true,
    ///                         Ssh = new AzureRM.Compute.V20180401.Inputs.SshConfigurationArgs
    ///                         {
    ///                             PublicKeys = 
    ///                             {
    ///                                 new AzureRM.Compute.V20180401.Inputs.SshPublicKeyArgs
    ///                                 {
    ///                                     KeyData = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCeClRAk2ipUs/l5voIsDC5q9RI+YSRd1Bvd/O+axgY4WiBzG+4FwJWZm/mLLe5DoOdHQwmU2FrKXZSW4w2sYE70KeWnrFViCOX5MTVvJgPE8ClugNl8RWth/tU849DvM9sT7vFgfVSHcAS2yDRyDlueii+8nF2ym8XWAPltFVCyLHRsyBp5YPqK8JFYIa1eybKsY3hEAxRCA+/7bq8et+Gj3coOsuRmrehav7rE6N12Pb80I6ofa6SM5XNYq4Xk0iYNx7R3kdz0Jj9XgZYWjAHjJmT0gTRoOnt6upOuxK7xI/ykWrllgpXrCPu3Ymz+c+ujaqcxDopnAl2lmf69/J1",
    ///                                     Path = "/home/{your-username}/.ssh/authorized_keys",
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///                 StorageProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///                 {
    ///                     ImageReference = new AzureRM.Compute.V20180401.Inputs.ImageReferenceArgs
    ///                     {
    ///                         Offer = "WindowsServer",
    ///                         Publisher = "MicrosoftWindowsServer",
    ///                         Sku = "2016-Datacenter",
    ///                         Version = "latest",
    ///                     },
    ///                     OsDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                     {
    ///                         Caching = "ReadWrite",
    ///                         CreateOption = "FromImage",
    ///                         ManagedDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                         {
    ///                             StorageAccountType = "Standard_LRS",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             VmScaleSetName = "{vmss-name}",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// 
    /// ## Create a scale set with virtual machines in different zones.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var virtualMachineScaleSet = new AzureRM.Compute.V20180401.VirtualMachineScaleSet("virtualMachineScaleSet", new AzureRM.Compute.V20180401.VirtualMachineScaleSetArgs
    ///         {
    ///             Location = "centralus",
    ///             Overprovision = true,
    ///             ResourceGroupName = "myResourceGroup",
    ///             Sku = new AzureRM.Compute.V20180401.Inputs.SkuArgs
    ///             {
    ///                 Capacity = 2,
    ///                 Name = "Standard_A1_v2",
    ///                 Tier = "Standard",
    ///             },
    ///             UpgradePolicy = new AzureRM.Compute.V20180401.Inputs.UpgradePolicyArgs
    ///             {
    ///                 Mode = "Automatic",
    ///             },
    ///             VirtualMachineProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetVMProfileArgs
    ///             {
    ///                 NetworkProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkProfileArgs
    ///                 {
    ///                     NetworkInterfaceConfigurations = 
    ///                     {
    ///                         new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetNetworkConfigurationArgs
    ///                         {
    ///                             Name = "{vmss-name}",
    ///                         },
    ///                     },
    ///                 },
    ///                 OsProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSProfileArgs
    ///                 {
    ///                     AdminPassword = "{your-password}",
    ///                     AdminUsername = "{your-username}",
    ///                     ComputerNamePrefix = "{vmss-name}",
    ///                 },
    ///                 StorageProfile = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetStorageProfileArgs
    ///                 {
    ///                     DataDisks = 
    ///                     {
    ///                         new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetDataDiskArgs
    ///                         {
    ///                             CreateOption = "Empty",
    ///                             DiskSizeGB = 1023,
    ///                             Lun = 0,
    ///                         },
    ///                         new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetDataDiskArgs
    ///                         {
    ///                             CreateOption = "Empty",
    ///                             DiskSizeGB = 1023,
    ///                             Lun = 1,
    ///                         },
    ///                     },
    ///                     ImageReference = new AzureRM.Compute.V20180401.Inputs.ImageReferenceArgs
    ///                     {
    ///                         Offer = "WindowsServer",
    ///                         Publisher = "MicrosoftWindowsServer",
    ///                         Sku = "2016-Datacenter",
    ///                         Version = "latest",
    ///                     },
    ///                     OsDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetOSDiskArgs
    ///                     {
    ///                         Caching = "ReadWrite",
    ///                         CreateOption = "FromImage",
    ///                         DiskSizeGB = 512,
    ///                         ManagedDisk = new AzureRM.Compute.V20180401.Inputs.VirtualMachineScaleSetManagedDiskParametersArgs
    ///                         {
    ///                             StorageAccountType = "Standard_LRS",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             VmScaleSetName = "{vmss-name}",
    ///             Zones = 
    ///             {
    ///                 "1",
    ///                 "3",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// </summary>
    public partial class VirtualMachineScaleSet : Pulumi.CustomResource
    {
        /// <summary>
        /// The identity of the virtual machine scale set, if configured.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.VirtualMachineScaleSetIdentityResponseResult?> Identity { get; private set; } = null!;

        /// <summary>
        /// Resource location
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the Virtual Machine Scale Set should be overprovisioned.
        /// </summary>
        [Output("overprovision")]
        public Output<bool?> Overprovision { get; private set; } = null!;

        /// <summary>
        /// Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started -&gt;**. Enter any required information and then click **Save**.
        /// </summary>
        [Output("plan")]
        public Output<Outputs.PlanResponseResult?> Plan { get; private set; } = null!;

        /// <summary>
        /// Fault Domain count for each placement group.
        /// </summary>
        [Output("platformFaultDomainCount")]
        public Output<int?> PlatformFaultDomainCount { get; private set; } = null!;

        /// <summary>
        /// The provisioning state, which only appears in the response.
        /// </summary>
        [Output("provisioningState")]
        public Output<string> ProvisioningState { get; private set; } = null!;

        /// <summary>
        /// Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. &lt;br&gt;&lt;br&gt;Minimum api-version: 2018-04-01.
        /// </summary>
        [Output("proximityPlacementGroup")]
        public Output<Outputs.SubResourceResponseResult?> ProximityPlacementGroup { get; private set; } = null!;

        /// <summary>
        /// When true this limits the scale set to a single placement group, of max size 100 virtual machines.
        /// </summary>
        [Output("singlePlacementGroup")]
        public Output<bool?> SinglePlacementGroup { get; private set; } = null!;

        /// <summary>
        /// The virtual machine scale set sku.
        /// </summary>
        [Output("sku")]
        public Output<Outputs.SkuResponseResult?> Sku { get; private set; } = null!;

        /// <summary>
        /// Resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Specifies the ID which uniquely identifies a Virtual Machine Scale Set.
        /// </summary>
        [Output("uniqueId")]
        public Output<string> UniqueId { get; private set; } = null!;

        /// <summary>
        /// The upgrade policy.
        /// </summary>
        [Output("upgradePolicy")]
        public Output<Outputs.UpgradePolicyResponseResult?> UpgradePolicy { get; private set; } = null!;

        /// <summary>
        /// The virtual machine profile.
        /// </summary>
        [Output("virtualMachineProfile")]
        public Output<Outputs.VirtualMachineScaleSetVMProfileResponseResult?> VirtualMachineProfile { get; private set; } = null!;

        /// <summary>
        /// Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.
        /// </summary>
        [Output("zoneBalance")]
        public Output<bool?> ZoneBalance { get; private set; } = null!;

        /// <summary>
        /// The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set.
        /// </summary>
        [Output("zones")]
        public Output<ImmutableArray<string>> Zones { get; private set; } = null!;


        /// <summary>
        /// Create a VirtualMachineScaleSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VirtualMachineScaleSet(string name, VirtualMachineScaleSetArgs args, CustomResourceOptions? options = null)
            : base("azurerm:compute/v20180401:VirtualMachineScaleSet", name, args ?? new VirtualMachineScaleSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VirtualMachineScaleSet(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azurerm:compute/v20180401:VirtualMachineScaleSet", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azurerm:compute/latest:VirtualMachineScaleSet"},
                    new Pulumi.Alias { Type = "azurerm:compute/v20150615:VirtualMachineScaleSet"},
                    new Pulumi.Alias { Type = "azurerm:compute/v20160330:VirtualMachineScaleSet"},
                    new Pulumi.Alias { Type = "azurerm:compute/v20170330:VirtualMachineScaleSet"},
                    new Pulumi.Alias { Type = "azurerm:compute/v20171201:VirtualMachineScaleSet"},
                    new Pulumi.Alias { Type = "azurerm:compute/v20180601:VirtualMachineScaleSet"},
                    new Pulumi.Alias { Type = "azurerm:compute/v20181001:VirtualMachineScaleSet"},
                    new Pulumi.Alias { Type = "azurerm:compute/v20190301:VirtualMachineScaleSet"},
                    new Pulumi.Alias { Type = "azurerm:compute/v20190701:VirtualMachineScaleSet"},
                    new Pulumi.Alias { Type = "azurerm:compute/v20191201:VirtualMachineScaleSet"},
                    new Pulumi.Alias { Type = "azurerm:compute/v20200601:VirtualMachineScaleSet"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VirtualMachineScaleSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VirtualMachineScaleSet Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VirtualMachineScaleSet(name, id, options);
        }
    }

    public sealed class VirtualMachineScaleSetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identity of the virtual machine scale set, if configured.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.VirtualMachineScaleSetIdentityArgs>? Identity { get; set; }

        /// <summary>
        /// Resource location
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Specifies whether the Virtual Machine Scale Set should be overprovisioned.
        /// </summary>
        [Input("overprovision")]
        public Input<bool>? Overprovision { get; set; }

        /// <summary>
        /// Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started -&gt;**. Enter any required information and then click **Save**.
        /// </summary>
        [Input("plan")]
        public Input<Inputs.PlanArgs>? Plan { get; set; }

        /// <summary>
        /// Fault Domain count for each placement group.
        /// </summary>
        [Input("platformFaultDomainCount")]
        public Input<int>? PlatformFaultDomainCount { get; set; }

        /// <summary>
        /// Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. &lt;br&gt;&lt;br&gt;Minimum api-version: 2018-04-01.
        /// </summary>
        [Input("proximityPlacementGroup")]
        public Input<Inputs.SubResourceArgs>? ProximityPlacementGroup { get; set; }

        /// <summary>
        /// The name of the resource group.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// When true this limits the scale set to a single placement group, of max size 100 virtual machines.
        /// </summary>
        [Input("singlePlacementGroup")]
        public Input<bool>? SinglePlacementGroup { get; set; }

        /// <summary>
        /// The virtual machine scale set sku.
        /// </summary>
        [Input("sku")]
        public Input<Inputs.SkuArgs>? Sku { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The upgrade policy.
        /// </summary>
        [Input("upgradePolicy")]
        public Input<Inputs.UpgradePolicyArgs>? UpgradePolicy { get; set; }

        /// <summary>
        /// The virtual machine profile.
        /// </summary>
        [Input("virtualMachineProfile")]
        public Input<Inputs.VirtualMachineScaleSetVMProfileArgs>? VirtualMachineProfile { get; set; }

        /// <summary>
        /// The name of the VM scale set to create or update.
        /// </summary>
        [Input("vmScaleSetName", required: true)]
        public Input<string> VmScaleSetName { get; set; } = null!;

        /// <summary>
        /// Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.
        /// </summary>
        [Input("zoneBalance")]
        public Input<bool>? ZoneBalance { get; set; }

        [Input("zones")]
        private InputList<string>? _zones;

        /// <summary>
        /// The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set.
        /// </summary>
        public InputList<string> Zones
        {
            get => _zones ?? (_zones = new InputList<string>());
            set => _zones = value;
        }

        public VirtualMachineScaleSetArgs()
        {
        }
    }
}
