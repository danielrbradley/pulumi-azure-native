// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../../types";
import * as utilities from "../../utilities";

/**
 * Web app configuration ARM resource.
 */
export function getWebAppConfiguration(args: GetWebAppConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetWebAppConfigurationResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure-native:web/v20200901:getWebAppConfiguration", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

export interface GetWebAppConfigurationArgs {
    /**
     * Name of the app.
     */
    readonly name: string;
    /**
     * Name of the resource group to which the resource belongs.
     */
    readonly resourceGroupName: string;
}

/**
 * Web app configuration ARM resource.
 */
export interface GetWebAppConfigurationResult {
    /**
     * <code>true</code> if Always On is enabled; otherwise, <code>false</code>.
     */
    readonly alwaysOn?: boolean;
    /**
     * Information about the formal API definition for the app.
     */
    readonly apiDefinition?: outputs.web.v20200901.ApiDefinitionInfoResponse;
    /**
     * Azure API management settings linked to the app.
     */
    readonly apiManagementConfig?: outputs.web.v20200901.ApiManagementConfigResponse;
    /**
     * App command line to launch.
     */
    readonly appCommandLine?: string;
    /**
     * Application settings.
     */
    readonly appSettings?: outputs.web.v20200901.NameValuePairResponse[];
    /**
     * <code>true</code> if Auto Heal is enabled; otherwise, <code>false</code>.
     */
    readonly autoHealEnabled?: boolean;
    /**
     * Auto Heal rules.
     */
    readonly autoHealRules?: outputs.web.v20200901.AutoHealRulesResponse;
    /**
     * Auto-swap slot name.
     */
    readonly autoSwapSlotName?: string;
    /**
     * Connection strings.
     */
    readonly connectionStrings?: outputs.web.v20200901.ConnStringInfoResponse[];
    /**
     * Cross-Origin Resource Sharing (CORS) settings.
     */
    readonly cors?: outputs.web.v20200901.CorsSettingsResponse;
    /**
     * Default documents.
     */
    readonly defaultDocuments?: string[];
    /**
     * <code>true</code> if detailed error logging is enabled; otherwise, <code>false</code>.
     */
    readonly detailedErrorLoggingEnabled?: boolean;
    /**
     * Document root.
     */
    readonly documentRoot?: string;
    /**
     * This is work around for polymorphic types.
     */
    readonly experiments?: outputs.web.v20200901.ExperimentsResponse;
    /**
     * State of FTP / FTPS service
     */
    readonly ftpsState?: string;
    /**
     * Handler mappings.
     */
    readonly handlerMappings?: outputs.web.v20200901.HandlerMappingResponse[];
    /**
     * Health check path
     */
    readonly healthCheckPath?: string;
    /**
     * Http20Enabled: configures a web site to allow clients to connect over http2.0
     */
    readonly http20Enabled?: boolean;
    /**
     * <code>true</code> if HTTP logging is enabled; otherwise, <code>false</code>.
     */
    readonly httpLoggingEnabled?: boolean;
    /**
     * Resource Id.
     */
    readonly id: string;
    /**
     * IP security restrictions for main.
     */
    readonly ipSecurityRestrictions?: outputs.web.v20200901.IpSecurityRestrictionResponse[];
    /**
     * Java container.
     */
    readonly javaContainer?: string;
    /**
     * Java container version.
     */
    readonly javaContainerVersion?: string;
    /**
     * Java version.
     */
    readonly javaVersion?: string;
    /**
     * Kind of resource.
     */
    readonly kind?: string;
    /**
     * Site limits.
     */
    readonly limits?: outputs.web.v20200901.SiteLimitsResponse;
    /**
     * Linux App Framework and version
     */
    readonly linuxFxVersion?: string;
    /**
     * Site load balancing.
     */
    readonly loadBalancing?: string;
    /**
     * <code>true</code> to enable local MySQL; otherwise, <code>false</code>.
     */
    readonly localMySqlEnabled?: boolean;
    /**
     * HTTP logs directory size limit.
     */
    readonly logsDirectorySizeLimit?: number;
    /**
     * Site MachineKey.
     */
    readonly machineKey: outputs.web.v20200901.SiteMachineKeyResponse;
    /**
     * Managed pipeline mode.
     */
    readonly managedPipelineMode?: string;
    /**
     * Managed Service Identity Id
     */
    readonly managedServiceIdentityId?: number;
    /**
     * MinTlsVersion: configures the minimum version of TLS required for SSL requests
     */
    readonly minTlsVersion?: string;
    /**
     * Resource Name.
     */
    readonly name: string;
    /**
     * .NET Framework version.
     */
    readonly netFrameworkVersion?: string;
    /**
     * Version of Node.js.
     */
    readonly nodeVersion?: string;
    /**
     * Number of workers.
     */
    readonly numberOfWorkers?: number;
    /**
     * Version of PHP.
     */
    readonly phpVersion?: string;
    /**
     * Version of PowerShell.
     */
    readonly powerShellVersion?: string;
    /**
     * Number of preWarmed instances.
     * This setting only applies to the Consumption and Elastic Plans
     */
    readonly preWarmedInstanceCount?: number;
    /**
     * Publishing user name.
     */
    readonly publishingUsername?: string;
    /**
     * Push endpoint settings.
     */
    readonly push?: outputs.web.v20200901.PushSettingsResponse;
    /**
     * Version of Python.
     */
    readonly pythonVersion?: string;
    /**
     * <code>true</code> if remote debugging is enabled; otherwise, <code>false</code>.
     */
    readonly remoteDebuggingEnabled?: boolean;
    /**
     * Remote debugging version.
     */
    readonly remoteDebuggingVersion?: string;
    /**
     * <code>true</code> if request tracing is enabled; otherwise, <code>false</code>.
     */
    readonly requestTracingEnabled?: boolean;
    /**
     * Request tracing expiration time.
     */
    readonly requestTracingExpirationTime?: string;
    /**
     * IP security restrictions for scm.
     */
    readonly scmIpSecurityRestrictions?: outputs.web.v20200901.IpSecurityRestrictionResponse[];
    /**
     * IP security restrictions for scm to use main.
     */
    readonly scmIpSecurityRestrictionsUseMain?: boolean;
    /**
     * ScmMinTlsVersion: configures the minimum version of TLS required for SSL requests for SCM site
     */
    readonly scmMinTlsVersion?: string;
    /**
     * SCM type.
     */
    readonly scmType?: string;
    /**
     * The system metadata relating to this resource.
     */
    readonly systemData: outputs.web.v20200901.SystemDataResponse;
    /**
     * Tracing options.
     */
    readonly tracingOptions?: string;
    /**
     * Resource type.
     */
    readonly type: string;
    /**
     * <code>true</code> to use 32-bit worker process; otherwise, <code>false</code>.
     */
    readonly use32BitWorkerProcess?: boolean;
    /**
     * Virtual applications.
     */
    readonly virtualApplications?: outputs.web.v20200901.VirtualApplicationResponse[];
    /**
     * Virtual Network name.
     */
    readonly vnetName?: string;
    /**
     * The number of private ports assigned to this app. These will be assigned dynamically on runtime.
     */
    readonly vnetPrivatePortsCount?: number;
    /**
     * Virtual Network Route All enabled. This causes all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
     */
    readonly vnetRouteAllEnabled?: boolean;
    /**
     * <code>true</code> if WebSocket is enabled; otherwise, <code>false</code>.
     */
    readonly webSocketsEnabled?: boolean;
    /**
     * Xenon App Framework and version
     */
    readonly windowsFxVersion?: string;
    /**
     * Explicit Managed Service Identity Id
     */
    readonly xManagedServiceIdentityId?: number;
}
