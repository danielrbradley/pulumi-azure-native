// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20150801

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Configuration of Azure web site
type SiteConfig struct {
	pulumi.CustomResourceState

	// Always On
	AlwaysOn pulumi.BoolPtrOutput `pulumi:"alwaysOn"`
	// Information about the formal API definition for the web app.
	ApiDefinition ApiDefinitionInfoResponsePtrOutput `pulumi:"apiDefinition"`
	// App Command Line to launch
	AppCommandLine pulumi.StringPtrOutput `pulumi:"appCommandLine"`
	// Application Settings
	AppSettings NameValuePairResponseArrayOutput `pulumi:"appSettings"`
	// Auto heal enabled
	AutoHealEnabled pulumi.BoolPtrOutput `pulumi:"autoHealEnabled"`
	// Auto heal rules
	AutoHealRules AutoHealRulesResponsePtrOutput `pulumi:"autoHealRules"`
	// Auto swap slot name
	AutoSwapSlotName pulumi.StringPtrOutput `pulumi:"autoSwapSlotName"`
	// Connection strings
	ConnectionStrings ConnStringInfoResponseArrayOutput `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors CorsSettingsResponsePtrOutput `pulumi:"cors"`
	// Default documents
	DefaultDocuments pulumi.StringArrayOutput `pulumi:"defaultDocuments"`
	// Detailed error logging enabled
	DetailedErrorLoggingEnabled pulumi.BoolPtrOutput `pulumi:"detailedErrorLoggingEnabled"`
	// Document root
	DocumentRoot pulumi.StringPtrOutput `pulumi:"documentRoot"`
	// This is work around for polymorphic types
	Experiments ExperimentsResponsePtrOutput `pulumi:"experiments"`
	// Handler mappings
	HandlerMappings HandlerMappingResponseArrayOutput `pulumi:"handlerMappings"`
	// HTTP logging Enabled
	HttpLoggingEnabled pulumi.BoolPtrOutput `pulumi:"httpLoggingEnabled"`
	// Ip Security restrictions
	IpSecurityRestrictions IpSecurityRestrictionResponseArrayOutput `pulumi:"ipSecurityRestrictions"`
	// Java container
	JavaContainer pulumi.StringPtrOutput `pulumi:"javaContainer"`
	// Java container version
	JavaContainerVersion pulumi.StringPtrOutput `pulumi:"javaContainerVersion"`
	// Java version
	JavaVersion pulumi.StringPtrOutput `pulumi:"javaVersion"`
	// Kind of resource
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Site limits
	Limits SiteLimitsResponsePtrOutput `pulumi:"limits"`
	// Site load balancing
	LoadBalancing pulumi.StringPtrOutput `pulumi:"loadBalancing"`
	// Local mysql enabled
	LocalMySqlEnabled pulumi.BoolPtrOutput `pulumi:"localMySqlEnabled"`
	// Resource Location
	Location pulumi.StringOutput `pulumi:"location"`
	// HTTP Logs Directory size limit
	LogsDirectorySizeLimit pulumi.IntPtrOutput `pulumi:"logsDirectorySizeLimit"`
	// Managed pipeline mode
	ManagedPipelineMode pulumi.StringPtrOutput `pulumi:"managedPipelineMode"`
	// Site Metadata
	Metadata NameValuePairResponseArrayOutput `pulumi:"metadata"`
	// Resource Name
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Net Framework Version
	NetFrameworkVersion pulumi.StringPtrOutput `pulumi:"netFrameworkVersion"`
	// Version of Node
	NodeVersion pulumi.StringPtrOutput `pulumi:"nodeVersion"`
	// Number of workers
	NumberOfWorkers pulumi.IntPtrOutput `pulumi:"numberOfWorkers"`
	// Version of PHP
	PhpVersion pulumi.StringPtrOutput `pulumi:"phpVersion"`
	// Publishing password
	PublishingPassword pulumi.StringPtrOutput `pulumi:"publishingPassword"`
	// Publishing user name
	PublishingUsername pulumi.StringPtrOutput `pulumi:"publishingUsername"`
	// Version of Python
	PythonVersion pulumi.StringPtrOutput `pulumi:"pythonVersion"`
	// Remote Debugging Enabled
	RemoteDebuggingEnabled pulumi.BoolPtrOutput `pulumi:"remoteDebuggingEnabled"`
	// Remote Debugging Version
	RemoteDebuggingVersion pulumi.StringPtrOutput `pulumi:"remoteDebuggingVersion"`
	// Enable request tracing
	RequestTracingEnabled pulumi.BoolPtrOutput `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time
	RequestTracingExpirationTime pulumi.StringPtrOutput `pulumi:"requestTracingExpirationTime"`
	// SCM type
	ScmType pulumi.StringPtrOutput `pulumi:"scmType"`
	// Resource tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Tracing options
	TracingOptions pulumi.StringPtrOutput `pulumi:"tracingOptions"`
	// Resource type
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// Use 32 bit worker process
	Use32BitWorkerProcess pulumi.BoolPtrOutput `pulumi:"use32BitWorkerProcess"`
	// Virtual applications
	VirtualApplications VirtualApplicationResponseArrayOutput `pulumi:"virtualApplications"`
	// Vnet name
	VnetName pulumi.StringPtrOutput `pulumi:"vnetName"`
	// Web socket enabled.
	WebSocketsEnabled pulumi.BoolPtrOutput `pulumi:"webSocketsEnabled"`
}

// NewSiteConfig registers a new resource with the given unique name, arguments, and options.
func NewSiteConfig(ctx *pulumi.Context,
	name string, args *SiteConfigArgs, opts ...pulumi.ResourceOption) (*SiteConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:web/v20150801:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-native:web:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-nextgen:web:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-native:web/latest:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/latest:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-native:web/v20160801:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20160801:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-native:web/v20180201:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20180201:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-native:web/v20181101:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20181101:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-native:web/v20190801:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20190801:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-native:web/v20200601:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20200601:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-native:web/v20200901:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20200901:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-native:web/v20201001:SiteConfig"),
		},
		{
			Type: pulumi.String("azure-nextgen:web/v20201001:SiteConfig"),
		},
	})
	opts = append(opts, aliases)
	var resource SiteConfig
	err := ctx.RegisterResource("azure-native:web/v20150801:SiteConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSiteConfig gets an existing SiteConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSiteConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SiteConfigState, opts ...pulumi.ResourceOption) (*SiteConfig, error) {
	var resource SiteConfig
	err := ctx.ReadResource("azure-native:web/v20150801:SiteConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SiteConfig resources.
type siteConfigState struct {
	// Always On
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// Information about the formal API definition for the web app.
	ApiDefinition *ApiDefinitionInfoResponse `pulumi:"apiDefinition"`
	// App Command Line to launch
	AppCommandLine *string `pulumi:"appCommandLine"`
	// Application Settings
	AppSettings []NameValuePairResponse `pulumi:"appSettings"`
	// Auto heal enabled
	AutoHealEnabled *bool `pulumi:"autoHealEnabled"`
	// Auto heal rules
	AutoHealRules *AutoHealRulesResponse `pulumi:"autoHealRules"`
	// Auto swap slot name
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// Connection strings
	ConnectionStrings []ConnStringInfoResponse `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors *CorsSettingsResponse `pulumi:"cors"`
	// Default documents
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// Detailed error logging enabled
	DetailedErrorLoggingEnabled *bool `pulumi:"detailedErrorLoggingEnabled"`
	// Document root
	DocumentRoot *string `pulumi:"documentRoot"`
	// This is work around for polymorphic types
	Experiments *ExperimentsResponse `pulumi:"experiments"`
	// Handler mappings
	HandlerMappings []HandlerMappingResponse `pulumi:"handlerMappings"`
	// HTTP logging Enabled
	HttpLoggingEnabled *bool `pulumi:"httpLoggingEnabled"`
	// Ip Security restrictions
	IpSecurityRestrictions []IpSecurityRestrictionResponse `pulumi:"ipSecurityRestrictions"`
	// Java container
	JavaContainer *string `pulumi:"javaContainer"`
	// Java container version
	JavaContainerVersion *string `pulumi:"javaContainerVersion"`
	// Java version
	JavaVersion *string `pulumi:"javaVersion"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Site limits
	Limits *SiteLimitsResponse `pulumi:"limits"`
	// Site load balancing
	LoadBalancing *string `pulumi:"loadBalancing"`
	// Local mysql enabled
	LocalMySqlEnabled *bool `pulumi:"localMySqlEnabled"`
	// Resource Location
	Location *string `pulumi:"location"`
	// HTTP Logs Directory size limit
	LogsDirectorySizeLimit *int `pulumi:"logsDirectorySizeLimit"`
	// Managed pipeline mode
	ManagedPipelineMode *string `pulumi:"managedPipelineMode"`
	// Site Metadata
	Metadata []NameValuePairResponse `pulumi:"metadata"`
	// Resource Name
	Name *string `pulumi:"name"`
	// Net Framework Version
	NetFrameworkVersion *string `pulumi:"netFrameworkVersion"`
	// Version of Node
	NodeVersion *string `pulumi:"nodeVersion"`
	// Number of workers
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// Version of PHP
	PhpVersion *string `pulumi:"phpVersion"`
	// Publishing password
	PublishingPassword *string `pulumi:"publishingPassword"`
	// Publishing user name
	PublishingUsername *string `pulumi:"publishingUsername"`
	// Version of Python
	PythonVersion *string `pulumi:"pythonVersion"`
	// Remote Debugging Enabled
	RemoteDebuggingEnabled *bool `pulumi:"remoteDebuggingEnabled"`
	// Remote Debugging Version
	RemoteDebuggingVersion *string `pulumi:"remoteDebuggingVersion"`
	// Enable request tracing
	RequestTracingEnabled *bool `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time
	RequestTracingExpirationTime *string `pulumi:"requestTracingExpirationTime"`
	// SCM type
	ScmType *string `pulumi:"scmType"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Tracing options
	TracingOptions *string `pulumi:"tracingOptions"`
	// Resource type
	Type *string `pulumi:"type"`
	// Use 32 bit worker process
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Virtual applications
	VirtualApplications []VirtualApplicationResponse `pulumi:"virtualApplications"`
	// Vnet name
	VnetName *string `pulumi:"vnetName"`
	// Web socket enabled.
	WebSocketsEnabled *bool `pulumi:"webSocketsEnabled"`
}

type SiteConfigState struct {
	// Always On
	AlwaysOn pulumi.BoolPtrInput
	// Information about the formal API definition for the web app.
	ApiDefinition ApiDefinitionInfoResponsePtrInput
	// App Command Line to launch
	AppCommandLine pulumi.StringPtrInput
	// Application Settings
	AppSettings NameValuePairResponseArrayInput
	// Auto heal enabled
	AutoHealEnabled pulumi.BoolPtrInput
	// Auto heal rules
	AutoHealRules AutoHealRulesResponsePtrInput
	// Auto swap slot name
	AutoSwapSlotName pulumi.StringPtrInput
	// Connection strings
	ConnectionStrings ConnStringInfoResponseArrayInput
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors CorsSettingsResponsePtrInput
	// Default documents
	DefaultDocuments pulumi.StringArrayInput
	// Detailed error logging enabled
	DetailedErrorLoggingEnabled pulumi.BoolPtrInput
	// Document root
	DocumentRoot pulumi.StringPtrInput
	// This is work around for polymorphic types
	Experiments ExperimentsResponsePtrInput
	// Handler mappings
	HandlerMappings HandlerMappingResponseArrayInput
	// HTTP logging Enabled
	HttpLoggingEnabled pulumi.BoolPtrInput
	// Ip Security restrictions
	IpSecurityRestrictions IpSecurityRestrictionResponseArrayInput
	// Java container
	JavaContainer pulumi.StringPtrInput
	// Java container version
	JavaContainerVersion pulumi.StringPtrInput
	// Java version
	JavaVersion pulumi.StringPtrInput
	// Kind of resource
	Kind pulumi.StringPtrInput
	// Site limits
	Limits SiteLimitsResponsePtrInput
	// Site load balancing
	LoadBalancing pulumi.StringPtrInput
	// Local mysql enabled
	LocalMySqlEnabled pulumi.BoolPtrInput
	// Resource Location
	Location pulumi.StringPtrInput
	// HTTP Logs Directory size limit
	LogsDirectorySizeLimit pulumi.IntPtrInput
	// Managed pipeline mode
	ManagedPipelineMode pulumi.StringPtrInput
	// Site Metadata
	Metadata NameValuePairResponseArrayInput
	// Resource Name
	Name pulumi.StringPtrInput
	// Net Framework Version
	NetFrameworkVersion pulumi.StringPtrInput
	// Version of Node
	NodeVersion pulumi.StringPtrInput
	// Number of workers
	NumberOfWorkers pulumi.IntPtrInput
	// Version of PHP
	PhpVersion pulumi.StringPtrInput
	// Publishing password
	PublishingPassword pulumi.StringPtrInput
	// Publishing user name
	PublishingUsername pulumi.StringPtrInput
	// Version of Python
	PythonVersion pulumi.StringPtrInput
	// Remote Debugging Enabled
	RemoteDebuggingEnabled pulumi.BoolPtrInput
	// Remote Debugging Version
	RemoteDebuggingVersion pulumi.StringPtrInput
	// Enable request tracing
	RequestTracingEnabled pulumi.BoolPtrInput
	// Request tracing expiration time
	RequestTracingExpirationTime pulumi.StringPtrInput
	// SCM type
	ScmType pulumi.StringPtrInput
	// Resource tags
	Tags pulumi.StringMapInput
	// Tracing options
	TracingOptions pulumi.StringPtrInput
	// Resource type
	Type pulumi.StringPtrInput
	// Use 32 bit worker process
	Use32BitWorkerProcess pulumi.BoolPtrInput
	// Virtual applications
	VirtualApplications VirtualApplicationResponseArrayInput
	// Vnet name
	VnetName pulumi.StringPtrInput
	// Web socket enabled.
	WebSocketsEnabled pulumi.BoolPtrInput
}

func (SiteConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*siteConfigState)(nil)).Elem()
}

type siteConfigArgs struct {
	// Always On
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// Information about the formal API definition for the web app.
	ApiDefinition *ApiDefinitionInfo `pulumi:"apiDefinition"`
	// App Command Line to launch
	AppCommandLine *string `pulumi:"appCommandLine"`
	// Application Settings
	AppSettings []NameValuePair `pulumi:"appSettings"`
	// Auto heal enabled
	AutoHealEnabled *bool `pulumi:"autoHealEnabled"`
	// Auto heal rules
	AutoHealRules *AutoHealRules `pulumi:"autoHealRules"`
	// Auto swap slot name
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// Connection strings
	ConnectionStrings []ConnStringInfo `pulumi:"connectionStrings"`
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors *CorsSettings `pulumi:"cors"`
	// Default documents
	DefaultDocuments []string `pulumi:"defaultDocuments"`
	// Detailed error logging enabled
	DetailedErrorLoggingEnabled *bool `pulumi:"detailedErrorLoggingEnabled"`
	// Document root
	DocumentRoot *string `pulumi:"documentRoot"`
	// This is work around for polymorphic types
	Experiments *Experiments `pulumi:"experiments"`
	// Handler mappings
	HandlerMappings []HandlerMapping `pulumi:"handlerMappings"`
	// HTTP logging Enabled
	HttpLoggingEnabled *bool `pulumi:"httpLoggingEnabled"`
	// Resource Id
	Id *string `pulumi:"id"`
	// Ip Security restrictions
	IpSecurityRestrictions []IpSecurityRestriction `pulumi:"ipSecurityRestrictions"`
	// Java container
	JavaContainer *string `pulumi:"javaContainer"`
	// Java container version
	JavaContainerVersion *string `pulumi:"javaContainerVersion"`
	// Java version
	JavaVersion *string `pulumi:"javaVersion"`
	// Kind of resource
	Kind *string `pulumi:"kind"`
	// Site limits
	Limits *SiteLimits `pulumi:"limits"`
	// Site load balancing
	LoadBalancing *string `pulumi:"loadBalancing"`
	// Local mysql enabled
	LocalMySqlEnabled *bool `pulumi:"localMySqlEnabled"`
	// Resource Location
	Location *string `pulumi:"location"`
	// HTTP Logs Directory size limit
	LogsDirectorySizeLimit *int `pulumi:"logsDirectorySizeLimit"`
	// Managed pipeline mode
	ManagedPipelineMode *string `pulumi:"managedPipelineMode"`
	// Site Metadata
	Metadata []NameValuePair `pulumi:"metadata"`
	// Resource Name
	Name string `pulumi:"name"`
	// Net Framework Version
	NetFrameworkVersion *string `pulumi:"netFrameworkVersion"`
	// Version of Node
	NodeVersion *string `pulumi:"nodeVersion"`
	// Number of workers
	NumberOfWorkers *int `pulumi:"numberOfWorkers"`
	// Version of PHP
	PhpVersion *string `pulumi:"phpVersion"`
	// Publishing password
	PublishingPassword *string `pulumi:"publishingPassword"`
	// Publishing user name
	PublishingUsername *string `pulumi:"publishingUsername"`
	// Version of Python
	PythonVersion *string `pulumi:"pythonVersion"`
	// Remote Debugging Enabled
	RemoteDebuggingEnabled *bool `pulumi:"remoteDebuggingEnabled"`
	// Remote Debugging Version
	RemoteDebuggingVersion *string `pulumi:"remoteDebuggingVersion"`
	// Enable request tracing
	RequestTracingEnabled *bool `pulumi:"requestTracingEnabled"`
	// Request tracing expiration time
	RequestTracingExpirationTime *string `pulumi:"requestTracingExpirationTime"`
	// Name of resource group
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// SCM type
	ScmType *string `pulumi:"scmType"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Tracing options
	TracingOptions *string `pulumi:"tracingOptions"`
	// Resource type
	Type *string `pulumi:"type"`
	// Use 32 bit worker process
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Virtual applications
	VirtualApplications []VirtualApplication `pulumi:"virtualApplications"`
	// Vnet name
	VnetName *string `pulumi:"vnetName"`
	// Web socket enabled.
	WebSocketsEnabled *bool `pulumi:"webSocketsEnabled"`
}

// The set of arguments for constructing a SiteConfig resource.
type SiteConfigArgs struct {
	// Always On
	AlwaysOn pulumi.BoolPtrInput
	// Information about the formal API definition for the web app.
	ApiDefinition ApiDefinitionInfoPtrInput
	// App Command Line to launch
	AppCommandLine pulumi.StringPtrInput
	// Application Settings
	AppSettings NameValuePairArrayInput
	// Auto heal enabled
	AutoHealEnabled pulumi.BoolPtrInput
	// Auto heal rules
	AutoHealRules AutoHealRulesPtrInput
	// Auto swap slot name
	AutoSwapSlotName pulumi.StringPtrInput
	// Connection strings
	ConnectionStrings ConnStringInfoArrayInput
	// Cross-Origin Resource Sharing (CORS) settings.
	Cors CorsSettingsPtrInput
	// Default documents
	DefaultDocuments pulumi.StringArrayInput
	// Detailed error logging enabled
	DetailedErrorLoggingEnabled pulumi.BoolPtrInput
	// Document root
	DocumentRoot pulumi.StringPtrInput
	// This is work around for polymorphic types
	Experiments ExperimentsPtrInput
	// Handler mappings
	HandlerMappings HandlerMappingArrayInput
	// HTTP logging Enabled
	HttpLoggingEnabled pulumi.BoolPtrInput
	// Resource Id
	Id pulumi.StringPtrInput
	// Ip Security restrictions
	IpSecurityRestrictions IpSecurityRestrictionArrayInput
	// Java container
	JavaContainer pulumi.StringPtrInput
	// Java container version
	JavaContainerVersion pulumi.StringPtrInput
	// Java version
	JavaVersion pulumi.StringPtrInput
	// Kind of resource
	Kind pulumi.StringPtrInput
	// Site limits
	Limits SiteLimitsPtrInput
	// Site load balancing
	LoadBalancing *SiteLoadBalancing
	// Local mysql enabled
	LocalMySqlEnabled pulumi.BoolPtrInput
	// Resource Location
	Location pulumi.StringPtrInput
	// HTTP Logs Directory size limit
	LogsDirectorySizeLimit pulumi.IntPtrInput
	// Managed pipeline mode
	ManagedPipelineMode *ManagedPipelineMode
	// Site Metadata
	Metadata NameValuePairArrayInput
	// Resource Name
	Name pulumi.StringInput
	// Net Framework Version
	NetFrameworkVersion pulumi.StringPtrInput
	// Version of Node
	NodeVersion pulumi.StringPtrInput
	// Number of workers
	NumberOfWorkers pulumi.IntPtrInput
	// Version of PHP
	PhpVersion pulumi.StringPtrInput
	// Publishing password
	PublishingPassword pulumi.StringPtrInput
	// Publishing user name
	PublishingUsername pulumi.StringPtrInput
	// Version of Python
	PythonVersion pulumi.StringPtrInput
	// Remote Debugging Enabled
	RemoteDebuggingEnabled pulumi.BoolPtrInput
	// Remote Debugging Version
	RemoteDebuggingVersion pulumi.StringPtrInput
	// Enable request tracing
	RequestTracingEnabled pulumi.BoolPtrInput
	// Request tracing expiration time
	RequestTracingExpirationTime pulumi.StringPtrInput
	// Name of resource group
	ResourceGroupName pulumi.StringInput
	// SCM type
	ScmType pulumi.StringPtrInput
	// Resource tags
	Tags pulumi.StringMapInput
	// Tracing options
	TracingOptions pulumi.StringPtrInput
	// Resource type
	Type pulumi.StringPtrInput
	// Use 32 bit worker process
	Use32BitWorkerProcess pulumi.BoolPtrInput
	// Virtual applications
	VirtualApplications VirtualApplicationArrayInput
	// Vnet name
	VnetName pulumi.StringPtrInput
	// Web socket enabled.
	WebSocketsEnabled pulumi.BoolPtrInput
}

func (SiteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*siteConfigArgs)(nil)).Elem()
}

type SiteConfigInput interface {
	pulumi.Input

	ToSiteConfigOutput() SiteConfigOutput
	ToSiteConfigOutputWithContext(ctx context.Context) SiteConfigOutput
}

func (*SiteConfig) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfig)(nil))
}

func (i *SiteConfig) ToSiteConfigOutput() SiteConfigOutput {
	return i.ToSiteConfigOutputWithContext(context.Background())
}

func (i *SiteConfig) ToSiteConfigOutputWithContext(ctx context.Context) SiteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteConfigOutput)
}

type SiteConfigOutput struct {
	*pulumi.OutputState
}

func (SiteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteConfig)(nil))
}

func (o SiteConfigOutput) ToSiteConfigOutput() SiteConfigOutput {
	return o
}

func (o SiteConfigOutput) ToSiteConfigOutputWithContext(ctx context.Context) SiteConfigOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(SiteConfigOutput{})
}
