// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Defines web application firewall policy for Azure CDN.
//
// ## Example Usage
// ### Creates specific policy
//
// ```go
// package main
//
// import (
// 	cdn "github.com/pulumi/pulumi-azurerm/sdk/go/azurerm/cdn/latest"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := cdn.NewPolicy(ctx, "policy", &cdn.PolicyArgs{
// 			CustomRules: &cdn.CustomRuleListArgs{
// 				Rules: cdn.CustomRuleArray{
// 					&cdn.CustomRuleArgs{
// 						Action:       pulumi.String("Block"),
// 						EnabledState: pulumi.String("Enabled"),
// 						MatchConditions: cdn.MatchConditionArray{
// 							&cdn.MatchConditionArgs{
// 								MatchValue: pulumi.StringArray{
// 									pulumi.String("CH"),
// 								},
// 								MatchVariable:   pulumi.String("RemoteAddr"),
// 								NegateCondition: pulumi.Bool(false),
// 								Operator:        pulumi.String("GeoMatch"),
// 								Transforms:      []interface{}{},
// 							},
// 							&cdn.MatchConditionArgs{
// 								MatchValue: pulumi.StringArray{
// 									pulumi.String("windows"),
// 								},
// 								MatchVariable:   pulumi.String("RequestHeader"),
// 								NegateCondition: pulumi.Bool(false),
// 								Operator:        pulumi.String("Contains"),
// 								Selector:        pulumi.String("UserAgent"),
// 								Transforms:      []interface{}{},
// 							},
// 							&cdn.MatchConditionArgs{
// 								MatchValue: pulumi.StringArray{
// 									pulumi.String("<?php"),
// 									pulumi.String("?>"),
// 								},
// 								MatchVariable:   pulumi.String("QueryString"),
// 								NegateCondition: pulumi.Bool(false),
// 								Operator:        pulumi.String("Contains"),
// 								Selector:        pulumi.String("search"),
// 								Transforms: pulumi.StringArray{
// 									pulumi.String("UrlDecode"),
// 									pulumi.String("Lowercase"),
// 								},
// 							},
// 						},
// 						Name:     pulumi.String("CustomRule1"),
// 						Priority: pulumi.Int(2),
// 					},
// 				},
// 			},
// 			Location: pulumi.String("WestUs"),
// 			ManagedRules: &cdn.ManagedRuleSetListArgs{
// 				ManagedRuleSets: cdn.ManagedRuleSetArray{
// 					&cdn.ManagedRuleSetArgs{
// 						RuleGroupOverrides: cdn.ManagedRuleGroupOverrideArray{
// 							&cdn.ManagedRuleGroupOverrideArgs{
// 								RuleGroupName: pulumi.String("Group1"),
// 								Rules: cdn.ManagedRuleOverrideArray{
// 									&cdn.ManagedRuleOverrideArgs{
// 										Action:       pulumi.String("Redirect"),
// 										EnabledState: pulumi.String("Enabled"),
// 										RuleId:       pulumi.String("GROUP1-0001"),
// 									},
// 									&cdn.ManagedRuleOverrideArgs{
// 										EnabledState: pulumi.String("Disabled"),
// 										RuleId:       pulumi.String("GROUP1-0002"),
// 									},
// 								},
// 							},
// 						},
// 						RuleSetType:    pulumi.String("DefaultRuleSet"),
// 						RuleSetVersion: pulumi.String("preview-1.0"),
// 					},
// 				},
// 			},
// 			PolicyName: pulumi.String("MicrosoftCdnWafPolicy"),
// 			PolicySettings: &cdn.PolicySettingsArgs{
// 				DefaultCustomBlockResponseBody:       pulumi.String("PGh0bWw+CjxoZWFkZXI+PHRpdGxlPkhlbGxvPC90aXRsZT48L2hlYWRlcj4KPGJvZHk+CkhlbGxvIHdvcmxkCjwvYm9keT4KPC9odG1sPg=="),
// 				DefaultCustomBlockResponseStatusCode: pulumi.Int(200),
// 				DefaultRedirectUrl:                   pulumi.String("http://www.bing.com"),
// 			},
// 			RateLimitRules: &cdn.RateLimitRuleListArgs{
// 				Rules: cdn.RateLimitRuleArray{
// 					&cdn.RateLimitRuleArgs{
// 						Action:       pulumi.String("Block"),
// 						EnabledState: pulumi.String("Enabled"),
// 						MatchConditions: cdn.MatchConditionArray{
// 							&cdn.MatchConditionArgs{
// 								MatchValue: pulumi.StringArray{
// 									pulumi.String("192.168.1.0/24"),
// 									pulumi.String("10.0.0.0/24"),
// 								},
// 								MatchVariable:   pulumi.String("RemoteAddr"),
// 								NegateCondition: pulumi.Bool(false),
// 								Operator:        pulumi.String("IPMatch"),
// 								Transforms:      []interface{}{},
// 							},
// 						},
// 						Name:                       pulumi.String("RateLimitRule1"),
// 						Priority:                   pulumi.Int(1),
// 						RateLimitDurationInMinutes: pulumi.Int(0),
// 						RateLimitThreshold:         pulumi.Int(1000),
// 					},
// 				},
// 			},
// 			ResourceGroupName: pulumi.String("rg1"),
// 			Sku: &cdn.SkuArgs{
// 				Name: pulumi.String("Standard_Microsoft"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
//
// ```
type Policy struct {
	pulumi.CustomResourceState

	// Describes custom rules inside the policy.
	CustomRules CustomRuleListResponsePtrOutput `pulumi:"customRules"`
	// Describes Azure CDN endpoints associated with this Web Application Firewall policy.
	EndpointLinks CdnEndpointResponseArrayOutput `pulumi:"endpointLinks"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// Resource location.
	Location pulumi.StringOutput `pulumi:"location"`
	// Describes managed rules inside the policy.
	ManagedRules ManagedRuleSetListResponsePtrOutput `pulumi:"managedRules"`
	// Resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Describes  policySettings for policy
	PolicySettings PolicySettingsResponsePtrOutput `pulumi:"policySettings"`
	// Provisioning state of the WebApplicationFirewallPolicy.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Describes rate limit rules inside the policy.
	RateLimitRules RateLimitRuleListResponsePtrOutput `pulumi:"rateLimitRules"`
	ResourceState  pulumi.StringOutput                `pulumi:"resourceState"`
	// The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy.
	Sku SkuResponseOutput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewPolicy registers a new resource with the given unique name, arguments, and options.
func NewPolicy(ctx *pulumi.Context,
	name string, args *PolicyArgs, opts ...pulumi.ResourceOption) (*Policy, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.PolicyName == nil {
		return nil, errors.New("missing required argument 'PolicyName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Sku == nil {
		return nil, errors.New("missing required argument 'Sku'")
	}
	if args == nil {
		args = &PolicyArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azurerm:cdn/v20190615:Policy"),
		},
		{
			Type: pulumi.String("azurerm:cdn/v20190615preview:Policy"),
		},
		{
			Type: pulumi.String("azurerm:cdn/v20200331:Policy"),
		},
		{
			Type: pulumi.String("azurerm:cdn/v20200415:Policy"),
		},
	})
	opts = append(opts, aliases)
	var resource Policy
	err := ctx.RegisterResource("azurerm:cdn/latest:Policy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicy gets an existing Policy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyState, opts ...pulumi.ResourceOption) (*Policy, error) {
	var resource Policy
	err := ctx.ReadResource("azurerm:cdn/latest:Policy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Policy resources.
type policyState struct {
	// Describes custom rules inside the policy.
	CustomRules *CustomRuleListResponse `pulumi:"customRules"`
	// Describes Azure CDN endpoints associated with this Web Application Firewall policy.
	EndpointLinks []CdnEndpointResponse `pulumi:"endpointLinks"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Describes managed rules inside the policy.
	ManagedRules *ManagedRuleSetListResponse `pulumi:"managedRules"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Describes  policySettings for policy
	PolicySettings *PolicySettingsResponse `pulumi:"policySettings"`
	// Provisioning state of the WebApplicationFirewallPolicy.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Describes rate limit rules inside the policy.
	RateLimitRules *RateLimitRuleListResponse `pulumi:"rateLimitRules"`
	ResourceState  *string                    `pulumi:"resourceState"`
	// The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy.
	Sku *SkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type *string `pulumi:"type"`
}

type PolicyState struct {
	// Describes custom rules inside the policy.
	CustomRules CustomRuleListResponsePtrInput
	// Describes Azure CDN endpoints associated with this Web Application Firewall policy.
	EndpointLinks CdnEndpointResponseArrayInput
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput
	// Resource location.
	Location pulumi.StringPtrInput
	// Describes managed rules inside the policy.
	ManagedRules ManagedRuleSetListResponsePtrInput
	// Resource name.
	Name pulumi.StringPtrInput
	// Describes  policySettings for policy
	PolicySettings PolicySettingsResponsePtrInput
	// Provisioning state of the WebApplicationFirewallPolicy.
	ProvisioningState pulumi.StringPtrInput
	// Describes rate limit rules inside the policy.
	RateLimitRules RateLimitRuleListResponsePtrInput
	ResourceState  pulumi.StringPtrInput
	// The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy.
	Sku SkuResponsePtrInput
	// Resource tags.
	Tags pulumi.StringMapInput
	// Resource type.
	Type pulumi.StringPtrInput
}

func (PolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyState)(nil)).Elem()
}

type policyArgs struct {
	// Describes custom rules inside the policy.
	CustomRules *CustomRuleList `pulumi:"customRules"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource location.
	Location string `pulumi:"location"`
	// Describes managed rules inside the policy.
	ManagedRules *ManagedRuleSetList `pulumi:"managedRules"`
	// The name of the CdnWebApplicationFirewallPolicy.
	PolicyName string `pulumi:"policyName"`
	// Describes  policySettings for policy
	PolicySettings *PolicySettings `pulumi:"policySettings"`
	// Describes rate limit rules inside the policy.
	RateLimitRules *RateLimitRuleList `pulumi:"rateLimitRules"`
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy.
	Sku Sku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Policy resource.
type PolicyArgs struct {
	// Describes custom rules inside the policy.
	CustomRules CustomRuleListPtrInput
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput
	// Resource location.
	Location pulumi.StringInput
	// Describes managed rules inside the policy.
	ManagedRules ManagedRuleSetListPtrInput
	// The name of the CdnWebApplicationFirewallPolicy.
	PolicyName pulumi.StringInput
	// Describes  policySettings for policy
	PolicySettings PolicySettingsPtrInput
	// Describes rate limit rules inside the policy.
	RateLimitRules RateLimitRuleListPtrInput
	// Name of the Resource group within the Azure subscription.
	ResourceGroupName pulumi.StringInput
	// The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy.
	Sku SkuInput
	// Resource tags.
	Tags pulumi.StringMapInput
}

func (PolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyArgs)(nil)).Elem()
}
