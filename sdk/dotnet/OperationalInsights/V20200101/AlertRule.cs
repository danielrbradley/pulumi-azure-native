// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.OperationalInsights.V20200101
{
    /// <summary>
    /// Alert rule.
    /// 
    /// ## Creates or updates a Fusion alert rule.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var alertRule = new AzureRM.OperationalInsights.V20200101.AlertRule("alertRule", new AzureRM.OperationalInsights.V20200101.AlertRuleArgs
    ///         {
    ///             Etag = "3d00c3ca-0000-0100-0000-5d42d5010000",
    ///             Kind = "Fusion",
    ///             ResourceGroupName = "myRg",
    ///             RuleId = "myFirstFusionRule",
    ///             WorkspaceName = "myWorkspace",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// 
    /// ## Creates or updates a MicrosoftSecurityIncidentCreation rule.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var alertRule = new AzureRM.OperationalInsights.V20200101.AlertRule("alertRule", new AzureRM.OperationalInsights.V20200101.AlertRuleArgs
    ///         {
    ///             Etag = "\"260097e0-0000-0d00-0000-5d6fa88f0000\"",
    ///             Kind = "MicrosoftSecurityIncidentCreation",
    ///             ResourceGroupName = "myRg",
    ///             RuleId = "microsoftSecurityIncidentCreationRuleExample",
    ///             WorkspaceName = "myWorkspace",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// 
    /// ## Creates or updates a Scheduled alert rule.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using AzureRM = Pulumi.AzureRM;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var alertRule = new AzureRM.OperationalInsights.V20200101.AlertRule("alertRule", new AzureRM.OperationalInsights.V20200101.AlertRuleArgs
    ///         {
    ///             Etag = "\"0300bf09-0000-0000-0000-5c37296e0000\"",
    ///             Kind = "Scheduled",
    ///             ResourceGroupName = "myRg",
    ///             RuleId = "73e01a99-5cd7-4139-a149-9f2736ff2ab5",
    ///             WorkspaceName = "myWorkspace",
    ///         });
    ///     }
    /// 
    /// }
    /// 
    /// ```
    /// </summary>
    public partial class AlertRule : Pulumi.CustomResource
    {
        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        [Output("etag")]
        public Output<string?> Etag { get; private set; } = null!;

        /// <summary>
        /// The alert rule kind
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Azure resource name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Azure resource type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a AlertRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AlertRule(string name, AlertRuleArgs args, CustomResourceOptions? options = null)
            : base("azurerm:operationalinsights/v20200101:AlertRule", name, args ?? new AlertRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AlertRule(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("azurerm:operationalinsights/v20200101:AlertRule", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "azurerm:operationalinsights/latest:AlertRule"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AlertRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AlertRule Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AlertRule(name, id, options);
        }
    }

    public sealed class AlertRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Etag of the azure resource
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// The alert rule kind
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// The name of the resource group within the user's subscription. The name is case insensitive.
        /// </summary>
        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        /// <summary>
        /// Alert rule ID
        /// </summary>
        [Input("ruleId", required: true)]
        public Input<string> RuleId { get; set; } = null!;

        /// <summary>
        /// The name of the workspace.
        /// </summary>
        [Input("workspaceName", required: true)]
        public Input<string> WorkspaceName { get; set; } = null!;

        public AlertRuleArgs()
        {
        }
    }
}
